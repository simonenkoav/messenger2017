// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageBuilderProto.proto

#ifndef PROTOBUF_MessageBuilderProto_2eproto__INCLUDED
#define PROTOBUF_MessageBuilderProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace MessageBuilderProto {
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class Message_FindDataRequestMessage;
class Message_FindDataRequestMessageDefaultTypeInternal;
extern Message_FindDataRequestMessageDefaultTypeInternal _Message_FindDataRequestMessage_default_instance_;
class Message_FindDataResponseMessage;
class Message_FindDataResponseMessageDefaultTypeInternal;
extern Message_FindDataResponseMessageDefaultTypeInternal _Message_FindDataResponseMessage_default_instance_;
class Message_FindNodeRequestMessage;
class Message_FindNodeRequestMessageDefaultTypeInternal;
extern Message_FindNodeRequestMessageDefaultTypeInternal _Message_FindNodeRequestMessage_default_instance_;
class Message_FindNodeResponseMessage;
class Message_FindNodeResponseMessageDefaultTypeInternal;
extern Message_FindNodeResponseMessageDefaultTypeInternal _Message_FindNodeResponseMessage_default_instance_;
class Message_PingRequestMessage;
class Message_PingRequestMessageDefaultTypeInternal;
extern Message_PingRequestMessageDefaultTypeInternal _Message_PingRequestMessage_default_instance_;
class Message_PingResponseMessage;
class Message_PingResponseMessageDefaultTypeInternal;
extern Message_PingResponseMessageDefaultTypeInternal _Message_PingResponseMessage_default_instance_;
class Message_StoreRequestMessage;
class Message_StoreRequestMessageDefaultTypeInternal;
extern Message_StoreRequestMessageDefaultTypeInternal _Message_StoreRequestMessage_default_instance_;
class Message_StoreResponsetMessage;
class Message_StoreResponsetMessageDefaultTypeInternal;
extern Message_StoreResponsetMessageDefaultTypeInternal _Message_StoreResponsetMessage_default_instance_;
class NodeInfo;
class NodeInfoDefaultTypeInternal;
extern NodeInfoDefaultTypeInternal _NodeInfo_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
}  // namespace MessageBuilderProto

namespace MessageBuilderProto {

namespace protobuf_MessageBuilderProto_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_MessageBuilderProto_2eproto

enum MessageType {
  PingRequest = 0,
  StoreRequest = 1,
  FindNodeRequest = 2,
  FindDataRequest = 3,
  PingResponse = 4,
  StoreResponse = 5,
  FindNodeResponse = 6,
  FindDataResponse = 7,
  MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = PingRequest;
const MessageType MessageType_MAX = FindDataResponse;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
// ===================================================================

class UserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageBuilderProto.UserInfo) */ {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
               &_UserInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UserInfo* other);

  // implements Message ----------------------------------------------

  inline UserInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const void* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // string domain = 2;
  void clear_domain();
  static const int kDomainFieldNumber = 2;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // @@protoc_insertion_point(class_scope:MessageBuilderProto.UserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  mutable int _cached_size_;
  friend struct protobuf_MessageBuilderProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NodeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageBuilderProto.NodeInfo) */ {
 public:
  NodeInfo();
  virtual ~NodeInfo();

  NodeInfo(const NodeInfo& from);

  inline NodeInfo& operator=(const NodeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeInfo& default_instance();

  static inline const NodeInfo* internal_default_instance() {
    return reinterpret_cast<const NodeInfo*>(
               &_NodeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(NodeInfo* other);

  // implements Message ----------------------------------------------

  inline NodeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  NodeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NodeInfo& from);
  void MergeFrom(const NodeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NodeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const void* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // string ip = 2;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // sint32 port = 3;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MessageBuilderProto.NodeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 port_;
  mutable int _cached_size_;
  friend struct protobuf_MessageBuilderProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message_PingRequestMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageBuilderProto.Message.PingRequestMessage) */ {
 public:
  Message_PingRequestMessage();
  virtual ~Message_PingRequestMessage();

  Message_PingRequestMessage(const Message_PingRequestMessage& from);

  inline Message_PingRequestMessage& operator=(const Message_PingRequestMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_PingRequestMessage& default_instance();

  static inline const Message_PingRequestMessage* internal_default_instance() {
    return reinterpret_cast<const Message_PingRequestMessage*>(
               &_Message_PingRequestMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Message_PingRequestMessage* other);

  // implements Message ----------------------------------------------

  inline Message_PingRequestMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_PingRequestMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_PingRequestMessage& from);
  void MergeFrom(const Message_PingRequestMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_PingRequestMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MessageBuilderProto.Message.PingRequestMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_MessageBuilderProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message_StoreRequestMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageBuilderProto.Message.StoreRequestMessage) */ {
 public:
  Message_StoreRequestMessage();
  virtual ~Message_StoreRequestMessage();

  Message_StoreRequestMessage(const Message_StoreRequestMessage& from);

  inline Message_StoreRequestMessage& operator=(const Message_StoreRequestMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_StoreRequestMessage& default_instance();

  static inline const Message_StoreRequestMessage* internal_default_instance() {
    return reinterpret_cast<const Message_StoreRequestMessage*>(
               &_Message_StoreRequestMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Message_StoreRequestMessage* other);

  // implements Message ----------------------------------------------

  inline Message_StoreRequestMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_StoreRequestMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_StoreRequestMessage& from);
  void MergeFrom(const Message_StoreRequestMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_StoreRequestMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .MessageBuilderProto.UserInfo user_info = 1;
  bool has_user_info() const;
  void clear_user_info();
  static const int kUserInfoFieldNumber = 1;
  const ::MessageBuilderProto::UserInfo& user_info() const;
  ::MessageBuilderProto::UserInfo* mutable_user_info();
  ::MessageBuilderProto::UserInfo* release_user_info();
  void set_allocated_user_info(::MessageBuilderProto::UserInfo* user_info);

  // @@protoc_insertion_point(class_scope:MessageBuilderProto.Message.StoreRequestMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::MessageBuilderProto::UserInfo* user_info_;
  mutable int _cached_size_;
  friend struct protobuf_MessageBuilderProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message_FindNodeRequestMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageBuilderProto.Message.FindNodeRequestMessage) */ {
 public:
  Message_FindNodeRequestMessage();
  virtual ~Message_FindNodeRequestMessage();

  Message_FindNodeRequestMessage(const Message_FindNodeRequestMessage& from);

  inline Message_FindNodeRequestMessage& operator=(const Message_FindNodeRequestMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_FindNodeRequestMessage& default_instance();

  static inline const Message_FindNodeRequestMessage* internal_default_instance() {
    return reinterpret_cast<const Message_FindNodeRequestMessage*>(
               &_Message_FindNodeRequestMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Message_FindNodeRequestMessage* other);

  // implements Message ----------------------------------------------

  inline Message_FindNodeRequestMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_FindNodeRequestMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_FindNodeRequestMessage& from);
  void MergeFrom(const Message_FindNodeRequestMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_FindNodeRequestMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const void* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // @@protoc_insertion_point(class_scope:MessageBuilderProto.Message.FindNodeRequestMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  mutable int _cached_size_;
  friend struct protobuf_MessageBuilderProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message_FindDataRequestMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageBuilderProto.Message.FindDataRequestMessage) */ {
 public:
  Message_FindDataRequestMessage();
  virtual ~Message_FindDataRequestMessage();

  Message_FindDataRequestMessage(const Message_FindDataRequestMessage& from);

  inline Message_FindDataRequestMessage& operator=(const Message_FindDataRequestMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_FindDataRequestMessage& default_instance();

  static inline const Message_FindDataRequestMessage* internal_default_instance() {
    return reinterpret_cast<const Message_FindDataRequestMessage*>(
               &_Message_FindDataRequestMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Message_FindDataRequestMessage* other);

  // implements Message ----------------------------------------------

  inline Message_FindDataRequestMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_FindDataRequestMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_FindDataRequestMessage& from);
  void MergeFrom(const Message_FindDataRequestMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_FindDataRequestMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const void* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // @@protoc_insertion_point(class_scope:MessageBuilderProto.Message.FindDataRequestMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  mutable int _cached_size_;
  friend struct protobuf_MessageBuilderProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message_PingResponseMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageBuilderProto.Message.PingResponseMessage) */ {
 public:
  Message_PingResponseMessage();
  virtual ~Message_PingResponseMessage();

  Message_PingResponseMessage(const Message_PingResponseMessage& from);

  inline Message_PingResponseMessage& operator=(const Message_PingResponseMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_PingResponseMessage& default_instance();

  static inline const Message_PingResponseMessage* internal_default_instance() {
    return reinterpret_cast<const Message_PingResponseMessage*>(
               &_Message_PingResponseMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Message_PingResponseMessage* other);

  // implements Message ----------------------------------------------

  inline Message_PingResponseMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_PingResponseMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_PingResponseMessage& from);
  void MergeFrom(const Message_PingResponseMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_PingResponseMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MessageBuilderProto.Message.PingResponseMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_MessageBuilderProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message_StoreResponsetMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageBuilderProto.Message.StoreResponsetMessage) */ {
 public:
  Message_StoreResponsetMessage();
  virtual ~Message_StoreResponsetMessage();

  Message_StoreResponsetMessage(const Message_StoreResponsetMessage& from);

  inline Message_StoreResponsetMessage& operator=(const Message_StoreResponsetMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_StoreResponsetMessage& default_instance();

  static inline const Message_StoreResponsetMessage* internal_default_instance() {
    return reinterpret_cast<const Message_StoreResponsetMessage*>(
               &_Message_StoreResponsetMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Message_StoreResponsetMessage* other);

  // implements Message ----------------------------------------------

  inline Message_StoreResponsetMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_StoreResponsetMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_StoreResponsetMessage& from);
  void MergeFrom(const Message_StoreResponsetMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_StoreResponsetMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MessageBuilderProto.Message.StoreResponsetMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_MessageBuilderProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message_FindNodeResponseMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageBuilderProto.Message.FindNodeResponseMessage) */ {
 public:
  Message_FindNodeResponseMessage();
  virtual ~Message_FindNodeResponseMessage();

  Message_FindNodeResponseMessage(const Message_FindNodeResponseMessage& from);

  inline Message_FindNodeResponseMessage& operator=(const Message_FindNodeResponseMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_FindNodeResponseMessage& default_instance();

  static inline const Message_FindNodeResponseMessage* internal_default_instance() {
    return reinterpret_cast<const Message_FindNodeResponseMessage*>(
               &_Message_FindNodeResponseMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Message_FindNodeResponseMessage* other);

  // implements Message ----------------------------------------------

  inline Message_FindNodeResponseMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_FindNodeResponseMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_FindNodeResponseMessage& from);
  void MergeFrom(const Message_FindNodeResponseMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_FindNodeResponseMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MessageBuilderProto.NodeInfo nodes_info = 1;
  int nodes_info_size() const;
  void clear_nodes_info();
  static const int kNodesInfoFieldNumber = 1;
  const ::MessageBuilderProto::NodeInfo& nodes_info(int index) const;
  ::MessageBuilderProto::NodeInfo* mutable_nodes_info(int index);
  ::MessageBuilderProto::NodeInfo* add_nodes_info();
  ::google::protobuf::RepeatedPtrField< ::MessageBuilderProto::NodeInfo >*
      mutable_nodes_info();
  const ::google::protobuf::RepeatedPtrField< ::MessageBuilderProto::NodeInfo >&
      nodes_info() const;

  // @@protoc_insertion_point(class_scope:MessageBuilderProto.Message.FindNodeResponseMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::MessageBuilderProto::NodeInfo > nodes_info_;
  mutable int _cached_size_;
  friend struct protobuf_MessageBuilderProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message_FindDataResponseMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageBuilderProto.Message.FindDataResponseMessage) */ {
 public:
  Message_FindDataResponseMessage();
  virtual ~Message_FindDataResponseMessage();

  Message_FindDataResponseMessage(const Message_FindDataResponseMessage& from);

  inline Message_FindDataResponseMessage& operator=(const Message_FindDataResponseMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_FindDataResponseMessage& default_instance();

  static inline const Message_FindDataResponseMessage* internal_default_instance() {
    return reinterpret_cast<const Message_FindDataResponseMessage*>(
               &_Message_FindDataResponseMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Message_FindDataResponseMessage* other);

  // implements Message ----------------------------------------------

  inline Message_FindDataResponseMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_FindDataResponseMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_FindDataResponseMessage& from);
  void MergeFrom(const Message_FindDataResponseMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_FindDataResponseMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MessageBuilderProto.NodeInfo nodes_info = 1;
  int nodes_info_size() const;
  void clear_nodes_info();
  static const int kNodesInfoFieldNumber = 1;
  const ::MessageBuilderProto::NodeInfo& nodes_info(int index) const;
  ::MessageBuilderProto::NodeInfo* mutable_nodes_info(int index);
  ::MessageBuilderProto::NodeInfo* add_nodes_info();
  ::google::protobuf::RepeatedPtrField< ::MessageBuilderProto::NodeInfo >*
      mutable_nodes_info();
  const ::google::protobuf::RepeatedPtrField< ::MessageBuilderProto::NodeInfo >&
      nodes_info() const;

  // .MessageBuilderProto.UserInfo user_info = 2;
  bool has_user_info() const;
  void clear_user_info();
  static const int kUserInfoFieldNumber = 2;
  const ::MessageBuilderProto::UserInfo& user_info() const;
  ::MessageBuilderProto::UserInfo* mutable_user_info();
  ::MessageBuilderProto::UserInfo* release_user_info();
  void set_allocated_user_info(::MessageBuilderProto::UserInfo* user_info);

  // @@protoc_insertion_point(class_scope:MessageBuilderProto.Message.FindDataResponseMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::MessageBuilderProto::NodeInfo > nodes_info_;
  ::MessageBuilderProto::UserInfo* user_info_;
  mutable int _cached_size_;
  friend struct protobuf_MessageBuilderProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageBuilderProto.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  enum MessageUniqCase {
    kPingRequestMessage = 4,
    kStoreRequestMessage = 5,
    kFindNodeRequestMessage = 6,
    kFindDataRequestMessage = 7,
    kPingResponseMessage = 8,
    kStoreResponseMessage = 9,
    kFindNodeResponseMessage = 10,
    kFindDataResponseMessage = 11,
    MESSAGE_UNIQ_NOT_SET = 0,
  };

  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const PROTOBUF_FINAL { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Message_PingRequestMessage PingRequestMessage;
  typedef Message_StoreRequestMessage StoreRequestMessage;
  typedef Message_FindNodeRequestMessage FindNodeRequestMessage;
  typedef Message_FindDataRequestMessage FindDataRequestMessage;
  typedef Message_PingResponseMessage PingResponseMessage;
  typedef Message_StoreResponsetMessage StoreResponsetMessage;
  typedef Message_FindNodeResponseMessage FindNodeResponseMessage;
  typedef Message_FindDataResponseMessage FindDataResponseMessage;

  // accessors -------------------------------------------------------

  // bytes request_id = 3;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const void* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // .MessageBuilderProto.NodeInfo node_info = 2;
  bool has_node_info() const;
  void clear_node_info();
  static const int kNodeInfoFieldNumber = 2;
  const ::MessageBuilderProto::NodeInfo& node_info() const;
  ::MessageBuilderProto::NodeInfo* mutable_node_info();
  ::MessageBuilderProto::NodeInfo* release_node_info();
  void set_allocated_node_info(::MessageBuilderProto::NodeInfo* node_info);

  // .MessageBuilderProto.MessageType message_type = 1;
  void clear_message_type();
  static const int kMessageTypeFieldNumber = 1;
  ::MessageBuilderProto::MessageType message_type() const;
  void set_message_type(::MessageBuilderProto::MessageType value);

  // .MessageBuilderProto.Message.PingRequestMessage ping_request_message = 4;
  bool has_ping_request_message() const;
  void clear_ping_request_message();
  static const int kPingRequestMessageFieldNumber = 4;
  const ::MessageBuilderProto::Message_PingRequestMessage& ping_request_message() const;
  ::MessageBuilderProto::Message_PingRequestMessage* mutable_ping_request_message();
  ::MessageBuilderProto::Message_PingRequestMessage* release_ping_request_message();
  void set_allocated_ping_request_message(::MessageBuilderProto::Message_PingRequestMessage* ping_request_message);

  // .MessageBuilderProto.Message.StoreRequestMessage store_request_message = 5;
  bool has_store_request_message() const;
  void clear_store_request_message();
  static const int kStoreRequestMessageFieldNumber = 5;
  const ::MessageBuilderProto::Message_StoreRequestMessage& store_request_message() const;
  ::MessageBuilderProto::Message_StoreRequestMessage* mutable_store_request_message();
  ::MessageBuilderProto::Message_StoreRequestMessage* release_store_request_message();
  void set_allocated_store_request_message(::MessageBuilderProto::Message_StoreRequestMessage* store_request_message);

  // .MessageBuilderProto.Message.FindNodeRequestMessage find_node_request_message = 6;
  bool has_find_node_request_message() const;
  void clear_find_node_request_message();
  static const int kFindNodeRequestMessageFieldNumber = 6;
  const ::MessageBuilderProto::Message_FindNodeRequestMessage& find_node_request_message() const;
  ::MessageBuilderProto::Message_FindNodeRequestMessage* mutable_find_node_request_message();
  ::MessageBuilderProto::Message_FindNodeRequestMessage* release_find_node_request_message();
  void set_allocated_find_node_request_message(::MessageBuilderProto::Message_FindNodeRequestMessage* find_node_request_message);

  // .MessageBuilderProto.Message.FindDataRequestMessage find_data_request_message = 7;
  bool has_find_data_request_message() const;
  void clear_find_data_request_message();
  static const int kFindDataRequestMessageFieldNumber = 7;
  const ::MessageBuilderProto::Message_FindDataRequestMessage& find_data_request_message() const;
  ::MessageBuilderProto::Message_FindDataRequestMessage* mutable_find_data_request_message();
  ::MessageBuilderProto::Message_FindDataRequestMessage* release_find_data_request_message();
  void set_allocated_find_data_request_message(::MessageBuilderProto::Message_FindDataRequestMessage* find_data_request_message);

  // .MessageBuilderProto.Message.PingResponseMessage ping_response_message = 8;
  bool has_ping_response_message() const;
  void clear_ping_response_message();
  static const int kPingResponseMessageFieldNumber = 8;
  const ::MessageBuilderProto::Message_PingResponseMessage& ping_response_message() const;
  ::MessageBuilderProto::Message_PingResponseMessage* mutable_ping_response_message();
  ::MessageBuilderProto::Message_PingResponseMessage* release_ping_response_message();
  void set_allocated_ping_response_message(::MessageBuilderProto::Message_PingResponseMessage* ping_response_message);

  // .MessageBuilderProto.Message.StoreResponsetMessage store_response_message = 9;
  bool has_store_response_message() const;
  void clear_store_response_message();
  static const int kStoreResponseMessageFieldNumber = 9;
  const ::MessageBuilderProto::Message_StoreResponsetMessage& store_response_message() const;
  ::MessageBuilderProto::Message_StoreResponsetMessage* mutable_store_response_message();
  ::MessageBuilderProto::Message_StoreResponsetMessage* release_store_response_message();
  void set_allocated_store_response_message(::MessageBuilderProto::Message_StoreResponsetMessage* store_response_message);

  // .MessageBuilderProto.Message.FindNodeResponseMessage find_node_response_message = 10;
  bool has_find_node_response_message() const;
  void clear_find_node_response_message();
  static const int kFindNodeResponseMessageFieldNumber = 10;
  const ::MessageBuilderProto::Message_FindNodeResponseMessage& find_node_response_message() const;
  ::MessageBuilderProto::Message_FindNodeResponseMessage* mutable_find_node_response_message();
  ::MessageBuilderProto::Message_FindNodeResponseMessage* release_find_node_response_message();
  void set_allocated_find_node_response_message(::MessageBuilderProto::Message_FindNodeResponseMessage* find_node_response_message);

  // .MessageBuilderProto.Message.FindDataResponseMessage find_data_response_message = 11;
  bool has_find_data_response_message() const;
  void clear_find_data_response_message();
  static const int kFindDataResponseMessageFieldNumber = 11;
  const ::MessageBuilderProto::Message_FindDataResponseMessage& find_data_response_message() const;
  ::MessageBuilderProto::Message_FindDataResponseMessage* mutable_find_data_response_message();
  ::MessageBuilderProto::Message_FindDataResponseMessage* release_find_data_response_message();
  void set_allocated_find_data_response_message(::MessageBuilderProto::Message_FindDataResponseMessage* find_data_response_message);

  MessageUniqCase message_uniq_case() const;
  // @@protoc_insertion_point(class_scope:MessageBuilderProto.Message)
 private:
  void set_has_ping_request_message();
  void set_has_store_request_message();
  void set_has_find_node_request_message();
  void set_has_find_data_request_message();
  void set_has_ping_response_message();
  void set_has_store_response_message();
  void set_has_find_node_response_message();
  void set_has_find_data_response_message();

  inline bool has_message_uniq() const;
  void clear_message_uniq();
  inline void clear_has_message_uniq();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::MessageBuilderProto::NodeInfo* node_info_;
  int message_type_;
  union MessageUniqUnion {
    MessageUniqUnion() {}
    ::MessageBuilderProto::Message_PingRequestMessage* ping_request_message_;
    ::MessageBuilderProto::Message_StoreRequestMessage* store_request_message_;
    ::MessageBuilderProto::Message_FindNodeRequestMessage* find_node_request_message_;
    ::MessageBuilderProto::Message_FindDataRequestMessage* find_data_request_message_;
    ::MessageBuilderProto::Message_PingResponseMessage* ping_response_message_;
    ::MessageBuilderProto::Message_StoreResponsetMessage* store_response_message_;
    ::MessageBuilderProto::Message_FindNodeResponseMessage* find_node_response_message_;
    ::MessageBuilderProto::Message_FindDataResponseMessage* find_data_response_message_;
  } message_uniq_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_MessageBuilderProto_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfo

// bytes guid = 1;
inline void UserInfo::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::guid() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.UserInfo.guid)
  return guid_.GetNoArena();
}
inline void UserInfo::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageBuilderProto.UserInfo.guid)
}
#if LANG_CXX11
inline void UserInfo::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageBuilderProto.UserInfo.guid)
}
#endif
inline void UserInfo::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageBuilderProto.UserInfo.guid)
}
inline void UserInfo::set_guid(const void* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageBuilderProto.UserInfo.guid)
}
inline ::std::string* UserInfo::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.UserInfo.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_guid() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.UserInfo.guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.UserInfo.guid)
}

// string domain = 2;
inline void UserInfo::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::domain() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.UserInfo.domain)
  return domain_.GetNoArena();
}
inline void UserInfo::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageBuilderProto.UserInfo.domain)
}
#if LANG_CXX11
inline void UserInfo::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageBuilderProto.UserInfo.domain)
}
#endif
inline void UserInfo::set_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageBuilderProto.UserInfo.domain)
}
inline void UserInfo::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageBuilderProto.UserInfo.domain)
}
inline ::std::string* UserInfo::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.UserInfo.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_domain() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.UserInfo.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.UserInfo.domain)
}

// -------------------------------------------------------------------

// NodeInfo

// bytes guid = 1;
inline void NodeInfo::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NodeInfo::guid() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.NodeInfo.guid)
  return guid_.GetNoArena();
}
inline void NodeInfo::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageBuilderProto.NodeInfo.guid)
}
#if LANG_CXX11
inline void NodeInfo::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageBuilderProto.NodeInfo.guid)
}
#endif
inline void NodeInfo::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageBuilderProto.NodeInfo.guid)
}
inline void NodeInfo::set_guid(const void* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageBuilderProto.NodeInfo.guid)
}
inline ::std::string* NodeInfo::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.NodeInfo.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeInfo::release_guid() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.NodeInfo.guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeInfo::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.NodeInfo.guid)
}

// string ip = 2;
inline void NodeInfo::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NodeInfo::ip() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.NodeInfo.ip)
  return ip_.GetNoArena();
}
inline void NodeInfo::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageBuilderProto.NodeInfo.ip)
}
#if LANG_CXX11
inline void NodeInfo::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageBuilderProto.NodeInfo.ip)
}
#endif
inline void NodeInfo::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageBuilderProto.NodeInfo.ip)
}
inline void NodeInfo::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageBuilderProto.NodeInfo.ip)
}
inline ::std::string* NodeInfo::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.NodeInfo.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeInfo::release_ip() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.NodeInfo.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeInfo::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.NodeInfo.ip)
}

// sint32 port = 3;
inline void NodeInfo::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 NodeInfo::port() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.NodeInfo.port)
  return port_;
}
inline void NodeInfo::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:MessageBuilderProto.NodeInfo.port)
}

// -------------------------------------------------------------------

// Message_PingRequestMessage

// -------------------------------------------------------------------

// Message_StoreRequestMessage

// .MessageBuilderProto.UserInfo user_info = 1;
inline bool Message_StoreRequestMessage::has_user_info() const {
  return this != internal_default_instance() && user_info_ != NULL;
}
inline void Message_StoreRequestMessage::clear_user_info() {
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) delete user_info_;
  user_info_ = NULL;
}
inline const ::MessageBuilderProto::UserInfo& Message_StoreRequestMessage::user_info() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.StoreRequestMessage.user_info)
  return user_info_ != NULL ? *user_info_
                         : *::MessageBuilderProto::UserInfo::internal_default_instance();
}
inline ::MessageBuilderProto::UserInfo* Message_StoreRequestMessage::mutable_user_info() {
  
  if (user_info_ == NULL) {
    user_info_ = new ::MessageBuilderProto::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.StoreRequestMessage.user_info)
  return user_info_;
}
inline ::MessageBuilderProto::UserInfo* Message_StoreRequestMessage::release_user_info() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.StoreRequestMessage.user_info)
  
  ::MessageBuilderProto::UserInfo* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline void Message_StoreRequestMessage::set_allocated_user_info(::MessageBuilderProto::UserInfo* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.StoreRequestMessage.user_info)
}

// -------------------------------------------------------------------

// Message_FindNodeRequestMessage

// bytes guid = 1;
inline void Message_FindNodeRequestMessage::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_FindNodeRequestMessage::guid() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
  return guid_.GetNoArena();
}
inline void Message_FindNodeRequestMessage::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
}
#if LANG_CXX11
inline void Message_FindNodeRequestMessage::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
}
#endif
inline void Message_FindNodeRequestMessage::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
}
inline void Message_FindNodeRequestMessage::set_guid(const void* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
}
inline ::std::string* Message_FindNodeRequestMessage::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_FindNodeRequestMessage::release_guid() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_FindNodeRequestMessage::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
}

// -------------------------------------------------------------------

// Message_FindDataRequestMessage

// bytes guid = 1;
inline void Message_FindDataRequestMessage::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_FindDataRequestMessage::guid() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.FindDataRequestMessage.guid)
  return guid_.GetNoArena();
}
inline void Message_FindDataRequestMessage::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageBuilderProto.Message.FindDataRequestMessage.guid)
}
#if LANG_CXX11
inline void Message_FindDataRequestMessage::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageBuilderProto.Message.FindDataRequestMessage.guid)
}
#endif
inline void Message_FindDataRequestMessage::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageBuilderProto.Message.FindDataRequestMessage.guid)
}
inline void Message_FindDataRequestMessage::set_guid(const void* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageBuilderProto.Message.FindDataRequestMessage.guid)
}
inline ::std::string* Message_FindDataRequestMessage::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.FindDataRequestMessage.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_FindDataRequestMessage::release_guid() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.FindDataRequestMessage.guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_FindDataRequestMessage::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.FindDataRequestMessage.guid)
}

// -------------------------------------------------------------------

// Message_PingResponseMessage

// -------------------------------------------------------------------

// Message_StoreResponsetMessage

// -------------------------------------------------------------------

// Message_FindNodeResponseMessage

// repeated .MessageBuilderProto.NodeInfo nodes_info = 1;
inline int Message_FindNodeResponseMessage::nodes_info_size() const {
  return nodes_info_.size();
}
inline void Message_FindNodeResponseMessage::clear_nodes_info() {
  nodes_info_.Clear();
}
inline const ::MessageBuilderProto::NodeInfo& Message_FindNodeResponseMessage::nodes_info(int index) const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.FindNodeResponseMessage.nodes_info)
  return nodes_info_.Get(index);
}
inline ::MessageBuilderProto::NodeInfo* Message_FindNodeResponseMessage::mutable_nodes_info(int index) {
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.FindNodeResponseMessage.nodes_info)
  return nodes_info_.Mutable(index);
}
inline ::MessageBuilderProto::NodeInfo* Message_FindNodeResponseMessage::add_nodes_info() {
  // @@protoc_insertion_point(field_add:MessageBuilderProto.Message.FindNodeResponseMessage.nodes_info)
  return nodes_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MessageBuilderProto::NodeInfo >*
Message_FindNodeResponseMessage::mutable_nodes_info() {
  // @@protoc_insertion_point(field_mutable_list:MessageBuilderProto.Message.FindNodeResponseMessage.nodes_info)
  return &nodes_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MessageBuilderProto::NodeInfo >&
Message_FindNodeResponseMessage::nodes_info() const {
  // @@protoc_insertion_point(field_list:MessageBuilderProto.Message.FindNodeResponseMessage.nodes_info)
  return nodes_info_;
}

// -------------------------------------------------------------------

// Message_FindDataResponseMessage

// repeated .MessageBuilderProto.NodeInfo nodes_info = 1;
inline int Message_FindDataResponseMessage::nodes_info_size() const {
  return nodes_info_.size();
}
inline void Message_FindDataResponseMessage::clear_nodes_info() {
  nodes_info_.Clear();
}
inline const ::MessageBuilderProto::NodeInfo& Message_FindDataResponseMessage::nodes_info(int index) const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.FindDataResponseMessage.nodes_info)
  return nodes_info_.Get(index);
}
inline ::MessageBuilderProto::NodeInfo* Message_FindDataResponseMessage::mutable_nodes_info(int index) {
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.FindDataResponseMessage.nodes_info)
  return nodes_info_.Mutable(index);
}
inline ::MessageBuilderProto::NodeInfo* Message_FindDataResponseMessage::add_nodes_info() {
  // @@protoc_insertion_point(field_add:MessageBuilderProto.Message.FindDataResponseMessage.nodes_info)
  return nodes_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MessageBuilderProto::NodeInfo >*
Message_FindDataResponseMessage::mutable_nodes_info() {
  // @@protoc_insertion_point(field_mutable_list:MessageBuilderProto.Message.FindDataResponseMessage.nodes_info)
  return &nodes_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MessageBuilderProto::NodeInfo >&
Message_FindDataResponseMessage::nodes_info() const {
  // @@protoc_insertion_point(field_list:MessageBuilderProto.Message.FindDataResponseMessage.nodes_info)
  return nodes_info_;
}

// .MessageBuilderProto.UserInfo user_info = 2;
inline bool Message_FindDataResponseMessage::has_user_info() const {
  return this != internal_default_instance() && user_info_ != NULL;
}
inline void Message_FindDataResponseMessage::clear_user_info() {
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) delete user_info_;
  user_info_ = NULL;
}
inline const ::MessageBuilderProto::UserInfo& Message_FindDataResponseMessage::user_info() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.FindDataResponseMessage.user_info)
  return user_info_ != NULL ? *user_info_
                         : *::MessageBuilderProto::UserInfo::internal_default_instance();
}
inline ::MessageBuilderProto::UserInfo* Message_FindDataResponseMessage::mutable_user_info() {
  
  if (user_info_ == NULL) {
    user_info_ = new ::MessageBuilderProto::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.FindDataResponseMessage.user_info)
  return user_info_;
}
inline ::MessageBuilderProto::UserInfo* Message_FindDataResponseMessage::release_user_info() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.FindDataResponseMessage.user_info)
  
  ::MessageBuilderProto::UserInfo* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline void Message_FindDataResponseMessage::set_allocated_user_info(::MessageBuilderProto::UserInfo* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.FindDataResponseMessage.user_info)
}

// -------------------------------------------------------------------

// Message

// .MessageBuilderProto.MessageType message_type = 1;
inline void Message::clear_message_type() {
  message_type_ = 0;
}
inline ::MessageBuilderProto::MessageType Message::message_type() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.message_type)
  return static_cast< ::MessageBuilderProto::MessageType >(message_type_);
}
inline void Message::set_message_type(::MessageBuilderProto::MessageType value) {
  
  message_type_ = value;
  // @@protoc_insertion_point(field_set:MessageBuilderProto.Message.message_type)
}

// .MessageBuilderProto.NodeInfo node_info = 2;
inline bool Message::has_node_info() const {
  return this != internal_default_instance() && node_info_ != NULL;
}
inline void Message::clear_node_info() {
  if (GetArenaNoVirtual() == NULL && node_info_ != NULL) delete node_info_;
  node_info_ = NULL;
}
inline const ::MessageBuilderProto::NodeInfo& Message::node_info() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.node_info)
  return node_info_ != NULL ? *node_info_
                         : *::MessageBuilderProto::NodeInfo::internal_default_instance();
}
inline ::MessageBuilderProto::NodeInfo* Message::mutable_node_info() {
  
  if (node_info_ == NULL) {
    node_info_ = new ::MessageBuilderProto::NodeInfo;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.node_info)
  return node_info_;
}
inline ::MessageBuilderProto::NodeInfo* Message::release_node_info() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.node_info)
  
  ::MessageBuilderProto::NodeInfo* temp = node_info_;
  node_info_ = NULL;
  return temp;
}
inline void Message::set_allocated_node_info(::MessageBuilderProto::NodeInfo* node_info) {
  delete node_info_;
  node_info_ = node_info;
  if (node_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.node_info)
}

// bytes request_id = 3;
inline void Message::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::request_id() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.request_id)
  return request_id_.GetNoArena();
}
inline void Message::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageBuilderProto.Message.request_id)
}
#if LANG_CXX11
inline void Message::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageBuilderProto.Message.request_id)
}
#endif
inline void Message::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageBuilderProto.Message.request_id)
}
inline void Message::set_request_id(const void* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageBuilderProto.Message.request_id)
}
inline ::std::string* Message::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_request_id() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.request_id)
}

// .MessageBuilderProto.Message.PingRequestMessage ping_request_message = 4;
inline bool Message::has_ping_request_message() const {
  return message_uniq_case() == kPingRequestMessage;
}
inline void Message::set_has_ping_request_message() {
  _oneof_case_[0] = kPingRequestMessage;
}
inline void Message::clear_ping_request_message() {
  if (has_ping_request_message()) {
    delete message_uniq_.ping_request_message_;
    clear_has_message_uniq();
  }
}
inline  const ::MessageBuilderProto::Message_PingRequestMessage& Message::ping_request_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.ping_request_message)
  return has_ping_request_message()
      ? *message_uniq_.ping_request_message_
      : ::MessageBuilderProto::Message_PingRequestMessage::default_instance();
}
inline ::MessageBuilderProto::Message_PingRequestMessage* Message::mutable_ping_request_message() {
  if (!has_ping_request_message()) {
    clear_message_uniq();
    set_has_ping_request_message();
    message_uniq_.ping_request_message_ = new ::MessageBuilderProto::Message_PingRequestMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.ping_request_message)
  return message_uniq_.ping_request_message_;
}
inline ::MessageBuilderProto::Message_PingRequestMessage* Message::release_ping_request_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.ping_request_message)
  if (has_ping_request_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_PingRequestMessage* temp = message_uniq_.ping_request_message_;
    message_uniq_.ping_request_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_ping_request_message(::MessageBuilderProto::Message_PingRequestMessage* ping_request_message) {
  clear_message_uniq();
  if (ping_request_message) {
    set_has_ping_request_message();
    message_uniq_.ping_request_message_ = ping_request_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.ping_request_message)
}

// .MessageBuilderProto.Message.StoreRequestMessage store_request_message = 5;
inline bool Message::has_store_request_message() const {
  return message_uniq_case() == kStoreRequestMessage;
}
inline void Message::set_has_store_request_message() {
  _oneof_case_[0] = kStoreRequestMessage;
}
inline void Message::clear_store_request_message() {
  if (has_store_request_message()) {
    delete message_uniq_.store_request_message_;
    clear_has_message_uniq();
  }
}
inline  const ::MessageBuilderProto::Message_StoreRequestMessage& Message::store_request_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.store_request_message)
  return has_store_request_message()
      ? *message_uniq_.store_request_message_
      : ::MessageBuilderProto::Message_StoreRequestMessage::default_instance();
}
inline ::MessageBuilderProto::Message_StoreRequestMessage* Message::mutable_store_request_message() {
  if (!has_store_request_message()) {
    clear_message_uniq();
    set_has_store_request_message();
    message_uniq_.store_request_message_ = new ::MessageBuilderProto::Message_StoreRequestMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.store_request_message)
  return message_uniq_.store_request_message_;
}
inline ::MessageBuilderProto::Message_StoreRequestMessage* Message::release_store_request_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.store_request_message)
  if (has_store_request_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_StoreRequestMessage* temp = message_uniq_.store_request_message_;
    message_uniq_.store_request_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_store_request_message(::MessageBuilderProto::Message_StoreRequestMessage* store_request_message) {
  clear_message_uniq();
  if (store_request_message) {
    set_has_store_request_message();
    message_uniq_.store_request_message_ = store_request_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.store_request_message)
}

// .MessageBuilderProto.Message.FindNodeRequestMessage find_node_request_message = 6;
inline bool Message::has_find_node_request_message() const {
  return message_uniq_case() == kFindNodeRequestMessage;
}
inline void Message::set_has_find_node_request_message() {
  _oneof_case_[0] = kFindNodeRequestMessage;
}
inline void Message::clear_find_node_request_message() {
  if (has_find_node_request_message()) {
    delete message_uniq_.find_node_request_message_;
    clear_has_message_uniq();
  }
}
inline  const ::MessageBuilderProto::Message_FindNodeRequestMessage& Message::find_node_request_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.find_node_request_message)
  return has_find_node_request_message()
      ? *message_uniq_.find_node_request_message_
      : ::MessageBuilderProto::Message_FindNodeRequestMessage::default_instance();
}
inline ::MessageBuilderProto::Message_FindNodeRequestMessage* Message::mutable_find_node_request_message() {
  if (!has_find_node_request_message()) {
    clear_message_uniq();
    set_has_find_node_request_message();
    message_uniq_.find_node_request_message_ = new ::MessageBuilderProto::Message_FindNodeRequestMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.find_node_request_message)
  return message_uniq_.find_node_request_message_;
}
inline ::MessageBuilderProto::Message_FindNodeRequestMessage* Message::release_find_node_request_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.find_node_request_message)
  if (has_find_node_request_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_FindNodeRequestMessage* temp = message_uniq_.find_node_request_message_;
    message_uniq_.find_node_request_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_find_node_request_message(::MessageBuilderProto::Message_FindNodeRequestMessage* find_node_request_message) {
  clear_message_uniq();
  if (find_node_request_message) {
    set_has_find_node_request_message();
    message_uniq_.find_node_request_message_ = find_node_request_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.find_node_request_message)
}

// .MessageBuilderProto.Message.FindDataRequestMessage find_data_request_message = 7;
inline bool Message::has_find_data_request_message() const {
  return message_uniq_case() == kFindDataRequestMessage;
}
inline void Message::set_has_find_data_request_message() {
  _oneof_case_[0] = kFindDataRequestMessage;
}
inline void Message::clear_find_data_request_message() {
  if (has_find_data_request_message()) {
    delete message_uniq_.find_data_request_message_;
    clear_has_message_uniq();
  }
}
inline  const ::MessageBuilderProto::Message_FindDataRequestMessage& Message::find_data_request_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.find_data_request_message)
  return has_find_data_request_message()
      ? *message_uniq_.find_data_request_message_
      : ::MessageBuilderProto::Message_FindDataRequestMessage::default_instance();
}
inline ::MessageBuilderProto::Message_FindDataRequestMessage* Message::mutable_find_data_request_message() {
  if (!has_find_data_request_message()) {
    clear_message_uniq();
    set_has_find_data_request_message();
    message_uniq_.find_data_request_message_ = new ::MessageBuilderProto::Message_FindDataRequestMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.find_data_request_message)
  return message_uniq_.find_data_request_message_;
}
inline ::MessageBuilderProto::Message_FindDataRequestMessage* Message::release_find_data_request_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.find_data_request_message)
  if (has_find_data_request_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_FindDataRequestMessage* temp = message_uniq_.find_data_request_message_;
    message_uniq_.find_data_request_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_find_data_request_message(::MessageBuilderProto::Message_FindDataRequestMessage* find_data_request_message) {
  clear_message_uniq();
  if (find_data_request_message) {
    set_has_find_data_request_message();
    message_uniq_.find_data_request_message_ = find_data_request_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.find_data_request_message)
}

// .MessageBuilderProto.Message.PingResponseMessage ping_response_message = 8;
inline bool Message::has_ping_response_message() const {
  return message_uniq_case() == kPingResponseMessage;
}
inline void Message::set_has_ping_response_message() {
  _oneof_case_[0] = kPingResponseMessage;
}
inline void Message::clear_ping_response_message() {
  if (has_ping_response_message()) {
    delete message_uniq_.ping_response_message_;
    clear_has_message_uniq();
  }
}
inline  const ::MessageBuilderProto::Message_PingResponseMessage& Message::ping_response_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.ping_response_message)
  return has_ping_response_message()
      ? *message_uniq_.ping_response_message_
      : ::MessageBuilderProto::Message_PingResponseMessage::default_instance();
}
inline ::MessageBuilderProto::Message_PingResponseMessage* Message::mutable_ping_response_message() {
  if (!has_ping_response_message()) {
    clear_message_uniq();
    set_has_ping_response_message();
    message_uniq_.ping_response_message_ = new ::MessageBuilderProto::Message_PingResponseMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.ping_response_message)
  return message_uniq_.ping_response_message_;
}
inline ::MessageBuilderProto::Message_PingResponseMessage* Message::release_ping_response_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.ping_response_message)
  if (has_ping_response_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_PingResponseMessage* temp = message_uniq_.ping_response_message_;
    message_uniq_.ping_response_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_ping_response_message(::MessageBuilderProto::Message_PingResponseMessage* ping_response_message) {
  clear_message_uniq();
  if (ping_response_message) {
    set_has_ping_response_message();
    message_uniq_.ping_response_message_ = ping_response_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.ping_response_message)
}

// .MessageBuilderProto.Message.StoreResponsetMessage store_response_message = 9;
inline bool Message::has_store_response_message() const {
  return message_uniq_case() == kStoreResponseMessage;
}
inline void Message::set_has_store_response_message() {
  _oneof_case_[0] = kStoreResponseMessage;
}
inline void Message::clear_store_response_message() {
  if (has_store_response_message()) {
    delete message_uniq_.store_response_message_;
    clear_has_message_uniq();
  }
}
inline  const ::MessageBuilderProto::Message_StoreResponsetMessage& Message::store_response_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.store_response_message)
  return has_store_response_message()
      ? *message_uniq_.store_response_message_
      : ::MessageBuilderProto::Message_StoreResponsetMessage::default_instance();
}
inline ::MessageBuilderProto::Message_StoreResponsetMessage* Message::mutable_store_response_message() {
  if (!has_store_response_message()) {
    clear_message_uniq();
    set_has_store_response_message();
    message_uniq_.store_response_message_ = new ::MessageBuilderProto::Message_StoreResponsetMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.store_response_message)
  return message_uniq_.store_response_message_;
}
inline ::MessageBuilderProto::Message_StoreResponsetMessage* Message::release_store_response_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.store_response_message)
  if (has_store_response_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_StoreResponsetMessage* temp = message_uniq_.store_response_message_;
    message_uniq_.store_response_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_store_response_message(::MessageBuilderProto::Message_StoreResponsetMessage* store_response_message) {
  clear_message_uniq();
  if (store_response_message) {
    set_has_store_response_message();
    message_uniq_.store_response_message_ = store_response_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.store_response_message)
}

// .MessageBuilderProto.Message.FindNodeResponseMessage find_node_response_message = 10;
inline bool Message::has_find_node_response_message() const {
  return message_uniq_case() == kFindNodeResponseMessage;
}
inline void Message::set_has_find_node_response_message() {
  _oneof_case_[0] = kFindNodeResponseMessage;
}
inline void Message::clear_find_node_response_message() {
  if (has_find_node_response_message()) {
    delete message_uniq_.find_node_response_message_;
    clear_has_message_uniq();
  }
}
inline  const ::MessageBuilderProto::Message_FindNodeResponseMessage& Message::find_node_response_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.find_node_response_message)
  return has_find_node_response_message()
      ? *message_uniq_.find_node_response_message_
      : ::MessageBuilderProto::Message_FindNodeResponseMessage::default_instance();
}
inline ::MessageBuilderProto::Message_FindNodeResponseMessage* Message::mutable_find_node_response_message() {
  if (!has_find_node_response_message()) {
    clear_message_uniq();
    set_has_find_node_response_message();
    message_uniq_.find_node_response_message_ = new ::MessageBuilderProto::Message_FindNodeResponseMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.find_node_response_message)
  return message_uniq_.find_node_response_message_;
}
inline ::MessageBuilderProto::Message_FindNodeResponseMessage* Message::release_find_node_response_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.find_node_response_message)
  if (has_find_node_response_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_FindNodeResponseMessage* temp = message_uniq_.find_node_response_message_;
    message_uniq_.find_node_response_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_find_node_response_message(::MessageBuilderProto::Message_FindNodeResponseMessage* find_node_response_message) {
  clear_message_uniq();
  if (find_node_response_message) {
    set_has_find_node_response_message();
    message_uniq_.find_node_response_message_ = find_node_response_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.find_node_response_message)
}

// .MessageBuilderProto.Message.FindDataResponseMessage find_data_response_message = 11;
inline bool Message::has_find_data_response_message() const {
  return message_uniq_case() == kFindDataResponseMessage;
}
inline void Message::set_has_find_data_response_message() {
  _oneof_case_[0] = kFindDataResponseMessage;
}
inline void Message::clear_find_data_response_message() {
  if (has_find_data_response_message()) {
    delete message_uniq_.find_data_response_message_;
    clear_has_message_uniq();
  }
}
inline  const ::MessageBuilderProto::Message_FindDataResponseMessage& Message::find_data_response_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.find_data_response_message)
  return has_find_data_response_message()
      ? *message_uniq_.find_data_response_message_
      : ::MessageBuilderProto::Message_FindDataResponseMessage::default_instance();
}
inline ::MessageBuilderProto::Message_FindDataResponseMessage* Message::mutable_find_data_response_message() {
  if (!has_find_data_response_message()) {
    clear_message_uniq();
    set_has_find_data_response_message();
    message_uniq_.find_data_response_message_ = new ::MessageBuilderProto::Message_FindDataResponseMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.find_data_response_message)
  return message_uniq_.find_data_response_message_;
}
inline ::MessageBuilderProto::Message_FindDataResponseMessage* Message::release_find_data_response_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.find_data_response_message)
  if (has_find_data_response_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_FindDataResponseMessage* temp = message_uniq_.find_data_response_message_;
    message_uniq_.find_data_response_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_find_data_response_message(::MessageBuilderProto::Message_FindDataResponseMessage* find_data_response_message) {
  clear_message_uniq();
  if (find_data_response_message) {
    set_has_find_data_response_message();
    message_uniq_.find_data_response_message_ = find_data_response_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.find_data_response_message)
}

inline bool Message::has_message_uniq() const {
  return message_uniq_case() != MESSAGE_UNIQ_NOT_SET;
}
inline void Message::clear_has_message_uniq() {
  _oneof_case_[0] = MESSAGE_UNIQ_NOT_SET;
}
inline Message::MessageUniqCase Message::message_uniq_case() const {
  return Message::MessageUniqCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace MessageBuilderProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MessageBuilderProto::MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MessageBuilderProto::MessageType>() {
  return ::MessageBuilderProto::MessageType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageBuilderProto_2eproto__INCLUDED
