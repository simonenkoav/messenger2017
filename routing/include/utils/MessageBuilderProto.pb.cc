// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageBuilderProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageBuilderProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MessageBuilderProto {
class UserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserInfo> {
} _UserInfo_default_instance_;
class NodeInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NodeInfo> {
} _NodeInfo_default_instance_;
class Message_PingRequestMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message_PingRequestMessage> {
} _Message_PingRequestMessage_default_instance_;
class Message_StoreRequestMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message_StoreRequestMessage> {
} _Message_StoreRequestMessage_default_instance_;
class Message_FindNodeRequestMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message_FindNodeRequestMessage> {
} _Message_FindNodeRequestMessage_default_instance_;
class Message_FindDataRequestMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message_FindDataRequestMessage> {
} _Message_FindDataRequestMessage_default_instance_;
class Message_PingResponseMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message_PingResponseMessage> {
} _Message_PingResponseMessage_default_instance_;
class Message_StoreResponsetMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message_StoreResponsetMessage> {
} _Message_StoreResponsetMessage_default_instance_;
class Message_FindNodeResponseMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message_FindNodeResponseMessage> {
} _Message_FindNodeResponseMessage_default_instance_;
class Message_FindDataResponseMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message_FindDataResponseMessage> {
} _Message_FindDataResponseMessage_default_instance_;
class MessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message> {
  public:
  const ::MessageBuilderProto::Message_PingRequestMessage* ping_request_message_;
  const ::MessageBuilderProto::Message_StoreRequestMessage* store_request_message_;
  const ::MessageBuilderProto::Message_FindNodeRequestMessage* find_node_request_message_;
  const ::MessageBuilderProto::Message_FindDataRequestMessage* find_data_request_message_;
  const ::MessageBuilderProto::Message_PingResponseMessage* ping_response_message_;
  const ::MessageBuilderProto::Message_StoreResponsetMessage* store_response_message_;
  const ::MessageBuilderProto::Message_FindNodeResponseMessage* find_node_response_message_;
  const ::MessageBuilderProto::Message_FindDataResponseMessage* find_data_response_message_;
} _Message_default_instance_;

namespace protobuf_MessageBuilderProto_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, domain_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeInfo, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_PingRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_StoreRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_StoreRequestMessage, user_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_FindNodeRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_FindNodeRequestMessage, guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_FindDataRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_FindDataRequestMessage, guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_PingResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_StoreResponsetMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_FindNodeResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_FindNodeResponseMessage, nodes_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_FindDataResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_FindDataResponseMessage, nodes_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_FindDataResponseMessage, user_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, message_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, node_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, request_id_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Message_default_instance_), ping_request_message_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Message_default_instance_), store_request_message_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Message_default_instance_), find_node_request_message_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Message_default_instance_), find_data_request_message_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Message_default_instance_), ping_response_message_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Message_default_instance_), store_response_message_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Message_default_instance_), find_node_response_message_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Message_default_instance_), find_data_response_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, message_uniq_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(UserInfo)},
  { 7, -1, sizeof(NodeInfo)},
  { 15, -1, sizeof(Message_PingRequestMessage)},
  { 20, -1, sizeof(Message_StoreRequestMessage)},
  { 26, -1, sizeof(Message_FindNodeRequestMessage)},
  { 32, -1, sizeof(Message_FindDataRequestMessage)},
  { 38, -1, sizeof(Message_PingResponseMessage)},
  { 43, -1, sizeof(Message_StoreResponsetMessage)},
  { 48, -1, sizeof(Message_FindNodeResponseMessage)},
  { 54, -1, sizeof(Message_FindDataResponseMessage)},
  { 61, -1, sizeof(Message)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NodeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_PingRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_StoreRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_FindNodeRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_FindDataRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_PingResponseMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_StoreResponsetMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_FindNodeResponseMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_FindDataResponseMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "MessageBuilderProto.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

}  // namespace

void TableStruct::Shutdown() {
  _UserInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _NodeInfo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Message_PingRequestMessage_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Message_StoreRequestMessage_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Message_FindNodeRequestMessage_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _Message_FindDataRequestMessage_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _Message_PingResponseMessage_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _Message_StoreResponsetMessage_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _Message_FindNodeResponseMessage_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _Message_FindDataResponseMessage_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _Message_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _UserInfo_default_instance_.DefaultConstruct();
  _NodeInfo_default_instance_.DefaultConstruct();
  _Message_PingRequestMessage_default_instance_.DefaultConstruct();
  _Message_StoreRequestMessage_default_instance_.DefaultConstruct();
  _Message_FindNodeRequestMessage_default_instance_.DefaultConstruct();
  _Message_FindDataRequestMessage_default_instance_.DefaultConstruct();
  _Message_PingResponseMessage_default_instance_.DefaultConstruct();
  _Message_StoreResponsetMessage_default_instance_.DefaultConstruct();
  _Message_FindNodeResponseMessage_default_instance_.DefaultConstruct();
  _Message_FindDataResponseMessage_default_instance_.DefaultConstruct();
  _Message_default_instance_.DefaultConstruct();
  _Message_StoreRequestMessage_default_instance_.get_mutable()->user_info_ = const_cast< ::MessageBuilderProto::UserInfo*>(
      ::MessageBuilderProto::UserInfo::internal_default_instance());
  _Message_FindDataResponseMessage_default_instance_.get_mutable()->user_info_ = const_cast< ::MessageBuilderProto::UserInfo*>(
      ::MessageBuilderProto::UserInfo::internal_default_instance());
  _Message_default_instance_.get_mutable()->node_info_ = const_cast< ::MessageBuilderProto::NodeInfo*>(
      ::MessageBuilderProto::NodeInfo::internal_default_instance());
  _Message_default_instance_.ping_request_message_ = const_cast< ::MessageBuilderProto::Message_PingRequestMessage*>(
      ::MessageBuilderProto::Message_PingRequestMessage::internal_default_instance());
  _Message_default_instance_.store_request_message_ = const_cast< ::MessageBuilderProto::Message_StoreRequestMessage*>(
      ::MessageBuilderProto::Message_StoreRequestMessage::internal_default_instance());
  _Message_default_instance_.find_node_request_message_ = const_cast< ::MessageBuilderProto::Message_FindNodeRequestMessage*>(
      ::MessageBuilderProto::Message_FindNodeRequestMessage::internal_default_instance());
  _Message_default_instance_.find_data_request_message_ = const_cast< ::MessageBuilderProto::Message_FindDataRequestMessage*>(
      ::MessageBuilderProto::Message_FindDataRequestMessage::internal_default_instance());
  _Message_default_instance_.ping_response_message_ = const_cast< ::MessageBuilderProto::Message_PingResponseMessage*>(
      ::MessageBuilderProto::Message_PingResponseMessage::internal_default_instance());
  _Message_default_instance_.store_response_message_ = const_cast< ::MessageBuilderProto::Message_StoreResponsetMessage*>(
      ::MessageBuilderProto::Message_StoreResponsetMessage::internal_default_instance());
  _Message_default_instance_.find_node_response_message_ = const_cast< ::MessageBuilderProto::Message_FindNodeResponseMessage*>(
      ::MessageBuilderProto::Message_FindNodeResponseMessage::internal_default_instance());
  _Message_default_instance_.find_data_response_message_ = const_cast< ::MessageBuilderProto::Message_FindDataResponseMessage*>(
      ::MessageBuilderProto::Message_FindDataResponseMessage::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031MessageBuilderProto.proto\022\023MessageBuil"
      "derProto\"(\n\010UserInfo\022\014\n\004guid\030\001 \001(\014\022\016\n\006do"
      "main\030\002 \001(\t\"2\n\010NodeInfo\022\014\n\004guid\030\001 \001(\014\022\n\n\002"
      "ip\030\002 \001(\t\022\014\n\004port\030\003 \001(\021\"\375\t\n\007Message\0226\n\014me"
      "ssage_type\030\001 \001(\0162 .MessageBuilderProto.M"
      "essageType\0220\n\tnode_info\030\002 \001(\0132\035.MessageB"
      "uilderProto.NodeInfo\022\022\n\nrequest_id\030\003 \001(\014"
      "\022O\n\024ping_request_message\030\004 \001(\0132/.Message"
      "BuilderProto.Message.PingRequestMessageH"
      "\000\022Q\n\025store_request_message\030\005 \001(\01320.Messa"
      "geBuilderProto.Message.StoreRequestMessa"
      "geH\000\022X\n\031find_node_request_message\030\006 \001(\0132"
      "3.MessageBuilderProto.Message.FindNodeRe"
      "questMessageH\000\022X\n\031find_data_request_mess"
      "age\030\007 \001(\01323.MessageBuilderProto.Message."
      "FindDataRequestMessageH\000\022Q\n\025ping_respons"
      "e_message\030\010 \001(\01320.MessageBuilderProto.Me"
      "ssage.PingResponseMessageH\000\022T\n\026store_res"
      "ponse_message\030\t \001(\01322.MessageBuilderProt"
      "o.Message.StoreResponsetMessageH\000\022Z\n\032fin"
      "d_node_response_message\030\n \001(\01324.MessageB"
      "uilderProto.Message.FindNodeResponseMess"
      "ageH\000\022Z\n\032find_data_response_message\030\013 \001("
      "\01324.MessageBuilderProto.Message.FindData"
      "ResponseMessageH\000\032\024\n\022PingRequestMessage\032"
      "G\n\023StoreRequestMessage\0220\n\tuser_info\030\001 \001("
      "\0132\035.MessageBuilderProto.UserInfo\032&\n\026Find"
      "NodeRequestMessage\022\014\n\004guid\030\001 \001(\014\032&\n\026Find"
      "DataRequestMessage\022\014\n\004guid\030\001 \001(\014\032\025\n\023Ping"
      "ResponseMessage\032\027\n\025StoreResponsetMessage"
      "\032L\n\027FindNodeResponseMessage\0221\n\nnodes_inf"
      "o\030\001 \003(\0132\035.MessageBuilderProto.NodeInfo\032~"
      "\n\027FindDataResponseMessage\0221\n\nnodes_info\030"
      "\001 \003(\0132\035.MessageBuilderProto.NodeInfo\0220\n\t"
      "user_info\030\002 \001(\0132\035.MessageBuilderProto.Us"
      "erInfoB\016\n\014message_uniq*\253\001\n\013MessageType\022\017"
      "\n\013PingRequest\020\000\022\020\n\014StoreRequest\020\001\022\023\n\017Fin"
      "dNodeRequest\020\002\022\023\n\017FindDataRequest\020\003\022\020\n\014P"
      "ingResponse\020\004\022\021\n\rStoreResponse\020\005\022\024\n\020Find"
      "NodeResponse\020\006\022\024\n\020FindDataResponse\020\007b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1604);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageBuilderProto.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_MessageBuilderProto_2eproto

const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_enum_descriptors[0];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kGuidFieldNumber;
const int UserInfo::kDomainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MessageBuilderProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageBuilderProto.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guid().size() > 0) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain().size() > 0) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  // @@protoc_insertion_point(copy_constructor:MessageBuilderProto.UserInfo)
}

void UserInfo::SharedCtor() {
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:MessageBuilderProto.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  protobuf_MessageBuilderProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageBuilderProto.UserInfo)
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageBuilderProto.UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string domain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageBuilderProto.UserInfo.domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageBuilderProto.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageBuilderProto.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageBuilderProto.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes guid = 1;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->guid(), output);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageBuilderProto.UserInfo.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->domain(), output);
  }

  // @@protoc_insertion_point(serialize_end:MessageBuilderProto.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageBuilderProto.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes guid = 1;
  if (this->guid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->guid(), target);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageBuilderProto.UserInfo.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->domain(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MessageBuilderProto.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageBuilderProto.UserInfo)
  size_t total_size = 0;

  // bytes guid = 1;
  if (this->guid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guid());
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageBuilderProto.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageBuilderProto.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageBuilderProto.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageBuilderProto.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid().size() > 0) {

    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageBuilderProto.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageBuilderProto.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  guid_.Swap(&other->guid_);
  domain_.Swap(&other->domain_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfo

// bytes guid = 1;
void UserInfo::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::guid() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.UserInfo.guid)
  return guid_.GetNoArena();
}
void UserInfo::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageBuilderProto.UserInfo.guid)
}
#if LANG_CXX11
void UserInfo::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageBuilderProto.UserInfo.guid)
}
#endif
void UserInfo::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageBuilderProto.UserInfo.guid)
}
void UserInfo::set_guid(const void* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageBuilderProto.UserInfo.guid)
}
::std::string* UserInfo::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.UserInfo.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_guid() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.UserInfo.guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.UserInfo.guid)
}

// string domain = 2;
void UserInfo::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::domain() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.UserInfo.domain)
  return domain_.GetNoArena();
}
void UserInfo::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageBuilderProto.UserInfo.domain)
}
#if LANG_CXX11
void UserInfo::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageBuilderProto.UserInfo.domain)
}
#endif
void UserInfo::set_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageBuilderProto.UserInfo.domain)
}
void UserInfo::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageBuilderProto.UserInfo.domain)
}
::std::string* UserInfo::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.UserInfo.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_domain() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.UserInfo.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.UserInfo.domain)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeInfo::kGuidFieldNumber;
const int NodeInfo::kIpFieldNumber;
const int NodeInfo::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeInfo::NodeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MessageBuilderProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageBuilderProto.NodeInfo)
}
NodeInfo::NodeInfo(const NodeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guid().size() > 0) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:MessageBuilderProto.NodeInfo)
}

void NodeInfo::SharedCtor() {
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  _cached_size_ = 0;
}

NodeInfo::~NodeInfo() {
  // @@protoc_insertion_point(destructor:MessageBuilderProto.NodeInfo)
  SharedDtor();
}

void NodeInfo::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NodeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeInfo::descriptor() {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeInfo& NodeInfo::default_instance() {
  protobuf_MessageBuilderProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

NodeInfo* NodeInfo::New(::google::protobuf::Arena* arena) const {
  NodeInfo* n = new NodeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageBuilderProto.NodeInfo)
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

bool NodeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageBuilderProto.NodeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageBuilderProto.NodeInfo.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageBuilderProto.NodeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageBuilderProto.NodeInfo)
  return false;
#undef DO_
}

void NodeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageBuilderProto.NodeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes guid = 1;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->guid(), output);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageBuilderProto.NodeInfo.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  // sint32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->port(), output);
  }

  // @@protoc_insertion_point(serialize_end:MessageBuilderProto.NodeInfo)
}

::google::protobuf::uint8* NodeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageBuilderProto.NodeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes guid = 1;
  if (this->guid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->guid(), target);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageBuilderProto.NodeInfo.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  // sint32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->port(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MessageBuilderProto.NodeInfo)
  return target;
}

size_t NodeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageBuilderProto.NodeInfo)
  size_t total_size = 0;

  // bytes guid = 1;
  if (this->guid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guid());
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // sint32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageBuilderProto.NodeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageBuilderProto.NodeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageBuilderProto.NodeInfo)
    MergeFrom(*source);
  }
}

void NodeInfo::MergeFrom(const NodeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageBuilderProto.NodeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid().size() > 0) {

    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void NodeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageBuilderProto.NodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeInfo::CopyFrom(const NodeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageBuilderProto.NodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeInfo::IsInitialized() const {
  return true;
}

void NodeInfo::Swap(NodeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeInfo::InternalSwap(NodeInfo* other) {
  guid_.Swap(&other->guid_);
  ip_.Swap(&other->ip_);
  std::swap(port_, other->port_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeInfo::GetMetadata() const {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NodeInfo

// bytes guid = 1;
void NodeInfo::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NodeInfo::guid() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.NodeInfo.guid)
  return guid_.GetNoArena();
}
void NodeInfo::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageBuilderProto.NodeInfo.guid)
}
#if LANG_CXX11
void NodeInfo::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageBuilderProto.NodeInfo.guid)
}
#endif
void NodeInfo::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageBuilderProto.NodeInfo.guid)
}
void NodeInfo::set_guid(const void* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageBuilderProto.NodeInfo.guid)
}
::std::string* NodeInfo::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.NodeInfo.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeInfo::release_guid() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.NodeInfo.guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeInfo::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.NodeInfo.guid)
}

// string ip = 2;
void NodeInfo::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NodeInfo::ip() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.NodeInfo.ip)
  return ip_.GetNoArena();
}
void NodeInfo::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageBuilderProto.NodeInfo.ip)
}
#if LANG_CXX11
void NodeInfo::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageBuilderProto.NodeInfo.ip)
}
#endif
void NodeInfo::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageBuilderProto.NodeInfo.ip)
}
void NodeInfo::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageBuilderProto.NodeInfo.ip)
}
::std::string* NodeInfo::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.NodeInfo.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeInfo::release_ip() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.NodeInfo.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeInfo::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.NodeInfo.ip)
}

// sint32 port = 3;
void NodeInfo::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 NodeInfo::port() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.NodeInfo.port)
  return port_;
}
void NodeInfo::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:MessageBuilderProto.NodeInfo.port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_PingRequestMessage::Message_PingRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MessageBuilderProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageBuilderProto.Message.PingRequestMessage)
}
Message_PingRequestMessage::Message_PingRequestMessage(const Message_PingRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageBuilderProto.Message.PingRequestMessage)
}

void Message_PingRequestMessage::SharedCtor() {
  _cached_size_ = 0;
}

Message_PingRequestMessage::~Message_PingRequestMessage() {
  // @@protoc_insertion_point(destructor:MessageBuilderProto.Message.PingRequestMessage)
  SharedDtor();
}

void Message_PingRequestMessage::SharedDtor() {
}

void Message_PingRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_PingRequestMessage::descriptor() {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_PingRequestMessage& Message_PingRequestMessage::default_instance() {
  protobuf_MessageBuilderProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message_PingRequestMessage* Message_PingRequestMessage::New(::google::protobuf::Arena* arena) const {
  Message_PingRequestMessage* n = new Message_PingRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message_PingRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageBuilderProto.Message.PingRequestMessage)
}

bool Message_PingRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageBuilderProto.Message.PingRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:MessageBuilderProto.Message.PingRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageBuilderProto.Message.PingRequestMessage)
  return false;
#undef DO_
}

void Message_PingRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageBuilderProto.Message.PingRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:MessageBuilderProto.Message.PingRequestMessage)
}

::google::protobuf::uint8* Message_PingRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageBuilderProto.Message.PingRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:MessageBuilderProto.Message.PingRequestMessage)
  return target;
}

size_t Message_PingRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageBuilderProto.Message.PingRequestMessage)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_PingRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageBuilderProto.Message.PingRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_PingRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_PingRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageBuilderProto.Message.PingRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageBuilderProto.Message.PingRequestMessage)
    MergeFrom(*source);
  }
}

void Message_PingRequestMessage::MergeFrom(const Message_PingRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageBuilderProto.Message.PingRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message_PingRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageBuilderProto.Message.PingRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_PingRequestMessage::CopyFrom(const Message_PingRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageBuilderProto.Message.PingRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_PingRequestMessage::IsInitialized() const {
  return true;
}

void Message_PingRequestMessage::Swap(Message_PingRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_PingRequestMessage::InternalSwap(Message_PingRequestMessage* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message_PingRequestMessage::GetMetadata() const {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message_PingRequestMessage

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_StoreRequestMessage::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_StoreRequestMessage::Message_StoreRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MessageBuilderProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageBuilderProto.Message.StoreRequestMessage)
}
Message_StoreRequestMessage::Message_StoreRequestMessage(const Message_StoreRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_info()) {
    user_info_ = new ::MessageBuilderProto::UserInfo(*from.user_info_);
  } else {
    user_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MessageBuilderProto.Message.StoreRequestMessage)
}

void Message_StoreRequestMessage::SharedCtor() {
  user_info_ = NULL;
  _cached_size_ = 0;
}

Message_StoreRequestMessage::~Message_StoreRequestMessage() {
  // @@protoc_insertion_point(destructor:MessageBuilderProto.Message.StoreRequestMessage)
  SharedDtor();
}

void Message_StoreRequestMessage::SharedDtor() {
  if (this != internal_default_instance()) {
    delete user_info_;
  }
}

void Message_StoreRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_StoreRequestMessage::descriptor() {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_StoreRequestMessage& Message_StoreRequestMessage::default_instance() {
  protobuf_MessageBuilderProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message_StoreRequestMessage* Message_StoreRequestMessage::New(::google::protobuf::Arena* arena) const {
  Message_StoreRequestMessage* n = new Message_StoreRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message_StoreRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageBuilderProto.Message.StoreRequestMessage)
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) {
    delete user_info_;
  }
  user_info_ = NULL;
}

bool Message_StoreRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageBuilderProto.Message.StoreRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .MessageBuilderProto.UserInfo user_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageBuilderProto.Message.StoreRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageBuilderProto.Message.StoreRequestMessage)
  return false;
#undef DO_
}

void Message_StoreRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageBuilderProto.Message.StoreRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MessageBuilderProto.UserInfo user_info = 1;
  if (this->has_user_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->user_info_, output);
  }

  // @@protoc_insertion_point(serialize_end:MessageBuilderProto.Message.StoreRequestMessage)
}

::google::protobuf::uint8* Message_StoreRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageBuilderProto.Message.StoreRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MessageBuilderProto.UserInfo user_info = 1;
  if (this->has_user_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->user_info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MessageBuilderProto.Message.StoreRequestMessage)
  return target;
}

size_t Message_StoreRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageBuilderProto.Message.StoreRequestMessage)
  size_t total_size = 0;

  // .MessageBuilderProto.UserInfo user_info = 1;
  if (this->has_user_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_StoreRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageBuilderProto.Message.StoreRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_StoreRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_StoreRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageBuilderProto.Message.StoreRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageBuilderProto.Message.StoreRequestMessage)
    MergeFrom(*source);
  }
}

void Message_StoreRequestMessage::MergeFrom(const Message_StoreRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageBuilderProto.Message.StoreRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user_info()) {
    mutable_user_info()->::MessageBuilderProto::UserInfo::MergeFrom(from.user_info());
  }
}

void Message_StoreRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageBuilderProto.Message.StoreRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_StoreRequestMessage::CopyFrom(const Message_StoreRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageBuilderProto.Message.StoreRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_StoreRequestMessage::IsInitialized() const {
  return true;
}

void Message_StoreRequestMessage::Swap(Message_StoreRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_StoreRequestMessage::InternalSwap(Message_StoreRequestMessage* other) {
  std::swap(user_info_, other->user_info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message_StoreRequestMessage::GetMetadata() const {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message_StoreRequestMessage

// .MessageBuilderProto.UserInfo user_info = 1;
bool Message_StoreRequestMessage::has_user_info() const {
  return this != internal_default_instance() && user_info_ != NULL;
}
void Message_StoreRequestMessage::clear_user_info() {
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) delete user_info_;
  user_info_ = NULL;
}
const ::MessageBuilderProto::UserInfo& Message_StoreRequestMessage::user_info() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.StoreRequestMessage.user_info)
  return user_info_ != NULL ? *user_info_
                         : *::MessageBuilderProto::UserInfo::internal_default_instance();
}
::MessageBuilderProto::UserInfo* Message_StoreRequestMessage::mutable_user_info() {
  
  if (user_info_ == NULL) {
    user_info_ = new ::MessageBuilderProto::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.StoreRequestMessage.user_info)
  return user_info_;
}
::MessageBuilderProto::UserInfo* Message_StoreRequestMessage::release_user_info() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.StoreRequestMessage.user_info)
  
  ::MessageBuilderProto::UserInfo* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
void Message_StoreRequestMessage::set_allocated_user_info(::MessageBuilderProto::UserInfo* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.StoreRequestMessage.user_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_FindNodeRequestMessage::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_FindNodeRequestMessage::Message_FindNodeRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MessageBuilderProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageBuilderProto.Message.FindNodeRequestMessage)
}
Message_FindNodeRequestMessage::Message_FindNodeRequestMessage(const Message_FindNodeRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guid().size() > 0) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  // @@protoc_insertion_point(copy_constructor:MessageBuilderProto.Message.FindNodeRequestMessage)
}

void Message_FindNodeRequestMessage::SharedCtor() {
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Message_FindNodeRequestMessage::~Message_FindNodeRequestMessage() {
  // @@protoc_insertion_point(destructor:MessageBuilderProto.Message.FindNodeRequestMessage)
  SharedDtor();
}

void Message_FindNodeRequestMessage::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Message_FindNodeRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_FindNodeRequestMessage::descriptor() {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_FindNodeRequestMessage& Message_FindNodeRequestMessage::default_instance() {
  protobuf_MessageBuilderProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message_FindNodeRequestMessage* Message_FindNodeRequestMessage::New(::google::protobuf::Arena* arena) const {
  Message_FindNodeRequestMessage* n = new Message_FindNodeRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message_FindNodeRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageBuilderProto.Message.FindNodeRequestMessage)
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Message_FindNodeRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageBuilderProto.Message.FindNodeRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageBuilderProto.Message.FindNodeRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageBuilderProto.Message.FindNodeRequestMessage)
  return false;
#undef DO_
}

void Message_FindNodeRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageBuilderProto.Message.FindNodeRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes guid = 1;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->guid(), output);
  }

  // @@protoc_insertion_point(serialize_end:MessageBuilderProto.Message.FindNodeRequestMessage)
}

::google::protobuf::uint8* Message_FindNodeRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageBuilderProto.Message.FindNodeRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes guid = 1;
  if (this->guid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->guid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MessageBuilderProto.Message.FindNodeRequestMessage)
  return target;
}

size_t Message_FindNodeRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageBuilderProto.Message.FindNodeRequestMessage)
  size_t total_size = 0;

  // bytes guid = 1;
  if (this->guid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_FindNodeRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageBuilderProto.Message.FindNodeRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_FindNodeRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_FindNodeRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageBuilderProto.Message.FindNodeRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageBuilderProto.Message.FindNodeRequestMessage)
    MergeFrom(*source);
  }
}

void Message_FindNodeRequestMessage::MergeFrom(const Message_FindNodeRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageBuilderProto.Message.FindNodeRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid().size() > 0) {

    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
}

void Message_FindNodeRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageBuilderProto.Message.FindNodeRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_FindNodeRequestMessage::CopyFrom(const Message_FindNodeRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageBuilderProto.Message.FindNodeRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_FindNodeRequestMessage::IsInitialized() const {
  return true;
}

void Message_FindNodeRequestMessage::Swap(Message_FindNodeRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_FindNodeRequestMessage::InternalSwap(Message_FindNodeRequestMessage* other) {
  guid_.Swap(&other->guid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message_FindNodeRequestMessage::GetMetadata() const {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message_FindNodeRequestMessage

// bytes guid = 1;
void Message_FindNodeRequestMessage::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Message_FindNodeRequestMessage::guid() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
  return guid_.GetNoArena();
}
void Message_FindNodeRequestMessage::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
}
#if LANG_CXX11
void Message_FindNodeRequestMessage::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
}
#endif
void Message_FindNodeRequestMessage::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
}
void Message_FindNodeRequestMessage::set_guid(const void* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
}
::std::string* Message_FindNodeRequestMessage::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Message_FindNodeRequestMessage::release_guid() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message_FindNodeRequestMessage::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.FindNodeRequestMessage.guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_FindDataRequestMessage::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_FindDataRequestMessage::Message_FindDataRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MessageBuilderProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageBuilderProto.Message.FindDataRequestMessage)
}
Message_FindDataRequestMessage::Message_FindDataRequestMessage(const Message_FindDataRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guid().size() > 0) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  // @@protoc_insertion_point(copy_constructor:MessageBuilderProto.Message.FindDataRequestMessage)
}

void Message_FindDataRequestMessage::SharedCtor() {
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Message_FindDataRequestMessage::~Message_FindDataRequestMessage() {
  // @@protoc_insertion_point(destructor:MessageBuilderProto.Message.FindDataRequestMessage)
  SharedDtor();
}

void Message_FindDataRequestMessage::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Message_FindDataRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_FindDataRequestMessage::descriptor() {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_FindDataRequestMessage& Message_FindDataRequestMessage::default_instance() {
  protobuf_MessageBuilderProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message_FindDataRequestMessage* Message_FindDataRequestMessage::New(::google::protobuf::Arena* arena) const {
  Message_FindDataRequestMessage* n = new Message_FindDataRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message_FindDataRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageBuilderProto.Message.FindDataRequestMessage)
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Message_FindDataRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageBuilderProto.Message.FindDataRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageBuilderProto.Message.FindDataRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageBuilderProto.Message.FindDataRequestMessage)
  return false;
#undef DO_
}

void Message_FindDataRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageBuilderProto.Message.FindDataRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes guid = 1;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->guid(), output);
  }

  // @@protoc_insertion_point(serialize_end:MessageBuilderProto.Message.FindDataRequestMessage)
}

::google::protobuf::uint8* Message_FindDataRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageBuilderProto.Message.FindDataRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes guid = 1;
  if (this->guid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->guid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MessageBuilderProto.Message.FindDataRequestMessage)
  return target;
}

size_t Message_FindDataRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageBuilderProto.Message.FindDataRequestMessage)
  size_t total_size = 0;

  // bytes guid = 1;
  if (this->guid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_FindDataRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageBuilderProto.Message.FindDataRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_FindDataRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_FindDataRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageBuilderProto.Message.FindDataRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageBuilderProto.Message.FindDataRequestMessage)
    MergeFrom(*source);
  }
}

void Message_FindDataRequestMessage::MergeFrom(const Message_FindDataRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageBuilderProto.Message.FindDataRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid().size() > 0) {

    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
}

void Message_FindDataRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageBuilderProto.Message.FindDataRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_FindDataRequestMessage::CopyFrom(const Message_FindDataRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageBuilderProto.Message.FindDataRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_FindDataRequestMessage::IsInitialized() const {
  return true;
}

void Message_FindDataRequestMessage::Swap(Message_FindDataRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_FindDataRequestMessage::InternalSwap(Message_FindDataRequestMessage* other) {
  guid_.Swap(&other->guid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message_FindDataRequestMessage::GetMetadata() const {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message_FindDataRequestMessage

// bytes guid = 1;
void Message_FindDataRequestMessage::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Message_FindDataRequestMessage::guid() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.FindDataRequestMessage.guid)
  return guid_.GetNoArena();
}
void Message_FindDataRequestMessage::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageBuilderProto.Message.FindDataRequestMessage.guid)
}
#if LANG_CXX11
void Message_FindDataRequestMessage::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageBuilderProto.Message.FindDataRequestMessage.guid)
}
#endif
void Message_FindDataRequestMessage::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageBuilderProto.Message.FindDataRequestMessage.guid)
}
void Message_FindDataRequestMessage::set_guid(const void* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageBuilderProto.Message.FindDataRequestMessage.guid)
}
::std::string* Message_FindDataRequestMessage::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.FindDataRequestMessage.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Message_FindDataRequestMessage::release_guid() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.FindDataRequestMessage.guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message_FindDataRequestMessage::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.FindDataRequestMessage.guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_PingResponseMessage::Message_PingResponseMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MessageBuilderProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageBuilderProto.Message.PingResponseMessage)
}
Message_PingResponseMessage::Message_PingResponseMessage(const Message_PingResponseMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageBuilderProto.Message.PingResponseMessage)
}

void Message_PingResponseMessage::SharedCtor() {
  _cached_size_ = 0;
}

Message_PingResponseMessage::~Message_PingResponseMessage() {
  // @@protoc_insertion_point(destructor:MessageBuilderProto.Message.PingResponseMessage)
  SharedDtor();
}

void Message_PingResponseMessage::SharedDtor() {
}

void Message_PingResponseMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_PingResponseMessage::descriptor() {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_PingResponseMessage& Message_PingResponseMessage::default_instance() {
  protobuf_MessageBuilderProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message_PingResponseMessage* Message_PingResponseMessage::New(::google::protobuf::Arena* arena) const {
  Message_PingResponseMessage* n = new Message_PingResponseMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message_PingResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageBuilderProto.Message.PingResponseMessage)
}

bool Message_PingResponseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageBuilderProto.Message.PingResponseMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:MessageBuilderProto.Message.PingResponseMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageBuilderProto.Message.PingResponseMessage)
  return false;
#undef DO_
}

void Message_PingResponseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageBuilderProto.Message.PingResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:MessageBuilderProto.Message.PingResponseMessage)
}

::google::protobuf::uint8* Message_PingResponseMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageBuilderProto.Message.PingResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:MessageBuilderProto.Message.PingResponseMessage)
  return target;
}

size_t Message_PingResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageBuilderProto.Message.PingResponseMessage)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_PingResponseMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageBuilderProto.Message.PingResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_PingResponseMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_PingResponseMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageBuilderProto.Message.PingResponseMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageBuilderProto.Message.PingResponseMessage)
    MergeFrom(*source);
  }
}

void Message_PingResponseMessage::MergeFrom(const Message_PingResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageBuilderProto.Message.PingResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message_PingResponseMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageBuilderProto.Message.PingResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_PingResponseMessage::CopyFrom(const Message_PingResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageBuilderProto.Message.PingResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_PingResponseMessage::IsInitialized() const {
  return true;
}

void Message_PingResponseMessage::Swap(Message_PingResponseMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_PingResponseMessage::InternalSwap(Message_PingResponseMessage* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message_PingResponseMessage::GetMetadata() const {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message_PingResponseMessage

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_StoreResponsetMessage::Message_StoreResponsetMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MessageBuilderProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageBuilderProto.Message.StoreResponsetMessage)
}
Message_StoreResponsetMessage::Message_StoreResponsetMessage(const Message_StoreResponsetMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageBuilderProto.Message.StoreResponsetMessage)
}

void Message_StoreResponsetMessage::SharedCtor() {
  _cached_size_ = 0;
}

Message_StoreResponsetMessage::~Message_StoreResponsetMessage() {
  // @@protoc_insertion_point(destructor:MessageBuilderProto.Message.StoreResponsetMessage)
  SharedDtor();
}

void Message_StoreResponsetMessage::SharedDtor() {
}

void Message_StoreResponsetMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_StoreResponsetMessage::descriptor() {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_StoreResponsetMessage& Message_StoreResponsetMessage::default_instance() {
  protobuf_MessageBuilderProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message_StoreResponsetMessage* Message_StoreResponsetMessage::New(::google::protobuf::Arena* arena) const {
  Message_StoreResponsetMessage* n = new Message_StoreResponsetMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message_StoreResponsetMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageBuilderProto.Message.StoreResponsetMessage)
}

bool Message_StoreResponsetMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageBuilderProto.Message.StoreResponsetMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:MessageBuilderProto.Message.StoreResponsetMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageBuilderProto.Message.StoreResponsetMessage)
  return false;
#undef DO_
}

void Message_StoreResponsetMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageBuilderProto.Message.StoreResponsetMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:MessageBuilderProto.Message.StoreResponsetMessage)
}

::google::protobuf::uint8* Message_StoreResponsetMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageBuilderProto.Message.StoreResponsetMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:MessageBuilderProto.Message.StoreResponsetMessage)
  return target;
}

size_t Message_StoreResponsetMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageBuilderProto.Message.StoreResponsetMessage)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_StoreResponsetMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageBuilderProto.Message.StoreResponsetMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_StoreResponsetMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_StoreResponsetMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageBuilderProto.Message.StoreResponsetMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageBuilderProto.Message.StoreResponsetMessage)
    MergeFrom(*source);
  }
}

void Message_StoreResponsetMessage::MergeFrom(const Message_StoreResponsetMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageBuilderProto.Message.StoreResponsetMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message_StoreResponsetMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageBuilderProto.Message.StoreResponsetMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_StoreResponsetMessage::CopyFrom(const Message_StoreResponsetMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageBuilderProto.Message.StoreResponsetMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_StoreResponsetMessage::IsInitialized() const {
  return true;
}

void Message_StoreResponsetMessage::Swap(Message_StoreResponsetMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_StoreResponsetMessage::InternalSwap(Message_StoreResponsetMessage* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message_StoreResponsetMessage::GetMetadata() const {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message_StoreResponsetMessage

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_FindNodeResponseMessage::kNodesInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_FindNodeResponseMessage::Message_FindNodeResponseMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MessageBuilderProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageBuilderProto.Message.FindNodeResponseMessage)
}
Message_FindNodeResponseMessage::Message_FindNodeResponseMessage(const Message_FindNodeResponseMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_info_(from.nodes_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageBuilderProto.Message.FindNodeResponseMessage)
}

void Message_FindNodeResponseMessage::SharedCtor() {
  _cached_size_ = 0;
}

Message_FindNodeResponseMessage::~Message_FindNodeResponseMessage() {
  // @@protoc_insertion_point(destructor:MessageBuilderProto.Message.FindNodeResponseMessage)
  SharedDtor();
}

void Message_FindNodeResponseMessage::SharedDtor() {
}

void Message_FindNodeResponseMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_FindNodeResponseMessage::descriptor() {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_FindNodeResponseMessage& Message_FindNodeResponseMessage::default_instance() {
  protobuf_MessageBuilderProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message_FindNodeResponseMessage* Message_FindNodeResponseMessage::New(::google::protobuf::Arena* arena) const {
  Message_FindNodeResponseMessage* n = new Message_FindNodeResponseMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message_FindNodeResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageBuilderProto.Message.FindNodeResponseMessage)
  nodes_info_.Clear();
}

bool Message_FindNodeResponseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageBuilderProto.Message.FindNodeResponseMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MessageBuilderProto.NodeInfo nodes_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nodes_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageBuilderProto.Message.FindNodeResponseMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageBuilderProto.Message.FindNodeResponseMessage)
  return false;
#undef DO_
}

void Message_FindNodeResponseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageBuilderProto.Message.FindNodeResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MessageBuilderProto.NodeInfo nodes_info = 1;
  for (unsigned int i = 0, n = this->nodes_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodes_info(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MessageBuilderProto.Message.FindNodeResponseMessage)
}

::google::protobuf::uint8* Message_FindNodeResponseMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageBuilderProto.Message.FindNodeResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MessageBuilderProto.NodeInfo nodes_info = 1;
  for (unsigned int i = 0, n = this->nodes_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->nodes_info(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MessageBuilderProto.Message.FindNodeResponseMessage)
  return target;
}

size_t Message_FindNodeResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageBuilderProto.Message.FindNodeResponseMessage)
  size_t total_size = 0;

  // repeated .MessageBuilderProto.NodeInfo nodes_info = 1;
  {
    unsigned int count = this->nodes_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nodes_info(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_FindNodeResponseMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageBuilderProto.Message.FindNodeResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_FindNodeResponseMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_FindNodeResponseMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageBuilderProto.Message.FindNodeResponseMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageBuilderProto.Message.FindNodeResponseMessage)
    MergeFrom(*source);
  }
}

void Message_FindNodeResponseMessage::MergeFrom(const Message_FindNodeResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageBuilderProto.Message.FindNodeResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_info_.MergeFrom(from.nodes_info_);
}

void Message_FindNodeResponseMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageBuilderProto.Message.FindNodeResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_FindNodeResponseMessage::CopyFrom(const Message_FindNodeResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageBuilderProto.Message.FindNodeResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_FindNodeResponseMessage::IsInitialized() const {
  return true;
}

void Message_FindNodeResponseMessage::Swap(Message_FindNodeResponseMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_FindNodeResponseMessage::InternalSwap(Message_FindNodeResponseMessage* other) {
  nodes_info_.InternalSwap(&other->nodes_info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message_FindNodeResponseMessage::GetMetadata() const {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message_FindNodeResponseMessage

// repeated .MessageBuilderProto.NodeInfo nodes_info = 1;
int Message_FindNodeResponseMessage::nodes_info_size() const {
  return nodes_info_.size();
}
void Message_FindNodeResponseMessage::clear_nodes_info() {
  nodes_info_.Clear();
}
const ::MessageBuilderProto::NodeInfo& Message_FindNodeResponseMessage::nodes_info(int index) const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.FindNodeResponseMessage.nodes_info)
  return nodes_info_.Get(index);
}
::MessageBuilderProto::NodeInfo* Message_FindNodeResponseMessage::mutable_nodes_info(int index) {
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.FindNodeResponseMessage.nodes_info)
  return nodes_info_.Mutable(index);
}
::MessageBuilderProto::NodeInfo* Message_FindNodeResponseMessage::add_nodes_info() {
  // @@protoc_insertion_point(field_add:MessageBuilderProto.Message.FindNodeResponseMessage.nodes_info)
  return nodes_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::MessageBuilderProto::NodeInfo >*
Message_FindNodeResponseMessage::mutable_nodes_info() {
  // @@protoc_insertion_point(field_mutable_list:MessageBuilderProto.Message.FindNodeResponseMessage.nodes_info)
  return &nodes_info_;
}
const ::google::protobuf::RepeatedPtrField< ::MessageBuilderProto::NodeInfo >&
Message_FindNodeResponseMessage::nodes_info() const {
  // @@protoc_insertion_point(field_list:MessageBuilderProto.Message.FindNodeResponseMessage.nodes_info)
  return nodes_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_FindDataResponseMessage::kNodesInfoFieldNumber;
const int Message_FindDataResponseMessage::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_FindDataResponseMessage::Message_FindDataResponseMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MessageBuilderProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageBuilderProto.Message.FindDataResponseMessage)
}
Message_FindDataResponseMessage::Message_FindDataResponseMessage(const Message_FindDataResponseMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_info_(from.nodes_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_info()) {
    user_info_ = new ::MessageBuilderProto::UserInfo(*from.user_info_);
  } else {
    user_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MessageBuilderProto.Message.FindDataResponseMessage)
}

void Message_FindDataResponseMessage::SharedCtor() {
  user_info_ = NULL;
  _cached_size_ = 0;
}

Message_FindDataResponseMessage::~Message_FindDataResponseMessage() {
  // @@protoc_insertion_point(destructor:MessageBuilderProto.Message.FindDataResponseMessage)
  SharedDtor();
}

void Message_FindDataResponseMessage::SharedDtor() {
  if (this != internal_default_instance()) {
    delete user_info_;
  }
}

void Message_FindDataResponseMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_FindDataResponseMessage::descriptor() {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_FindDataResponseMessage& Message_FindDataResponseMessage::default_instance() {
  protobuf_MessageBuilderProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message_FindDataResponseMessage* Message_FindDataResponseMessage::New(::google::protobuf::Arena* arena) const {
  Message_FindDataResponseMessage* n = new Message_FindDataResponseMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message_FindDataResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageBuilderProto.Message.FindDataResponseMessage)
  nodes_info_.Clear();
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) {
    delete user_info_;
  }
  user_info_ = NULL;
}

bool Message_FindDataResponseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageBuilderProto.Message.FindDataResponseMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MessageBuilderProto.NodeInfo nodes_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nodes_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MessageBuilderProto.UserInfo user_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageBuilderProto.Message.FindDataResponseMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageBuilderProto.Message.FindDataResponseMessage)
  return false;
#undef DO_
}

void Message_FindDataResponseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageBuilderProto.Message.FindDataResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MessageBuilderProto.NodeInfo nodes_info = 1;
  for (unsigned int i = 0, n = this->nodes_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodes_info(i), output);
  }

  // .MessageBuilderProto.UserInfo user_info = 2;
  if (this->has_user_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->user_info_, output);
  }

  // @@protoc_insertion_point(serialize_end:MessageBuilderProto.Message.FindDataResponseMessage)
}

::google::protobuf::uint8* Message_FindDataResponseMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageBuilderProto.Message.FindDataResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MessageBuilderProto.NodeInfo nodes_info = 1;
  for (unsigned int i = 0, n = this->nodes_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->nodes_info(i), deterministic, target);
  }

  // .MessageBuilderProto.UserInfo user_info = 2;
  if (this->has_user_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->user_info_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MessageBuilderProto.Message.FindDataResponseMessage)
  return target;
}

size_t Message_FindDataResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageBuilderProto.Message.FindDataResponseMessage)
  size_t total_size = 0;

  // repeated .MessageBuilderProto.NodeInfo nodes_info = 1;
  {
    unsigned int count = this->nodes_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nodes_info(i));
    }
  }

  // .MessageBuilderProto.UserInfo user_info = 2;
  if (this->has_user_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_FindDataResponseMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageBuilderProto.Message.FindDataResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_FindDataResponseMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_FindDataResponseMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageBuilderProto.Message.FindDataResponseMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageBuilderProto.Message.FindDataResponseMessage)
    MergeFrom(*source);
  }
}

void Message_FindDataResponseMessage::MergeFrom(const Message_FindDataResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageBuilderProto.Message.FindDataResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_info_.MergeFrom(from.nodes_info_);
  if (from.has_user_info()) {
    mutable_user_info()->::MessageBuilderProto::UserInfo::MergeFrom(from.user_info());
  }
}

void Message_FindDataResponseMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageBuilderProto.Message.FindDataResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_FindDataResponseMessage::CopyFrom(const Message_FindDataResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageBuilderProto.Message.FindDataResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_FindDataResponseMessage::IsInitialized() const {
  return true;
}

void Message_FindDataResponseMessage::Swap(Message_FindDataResponseMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_FindDataResponseMessage::InternalSwap(Message_FindDataResponseMessage* other) {
  nodes_info_.InternalSwap(&other->nodes_info_);
  std::swap(user_info_, other->user_info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message_FindDataResponseMessage::GetMetadata() const {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message_FindDataResponseMessage

// repeated .MessageBuilderProto.NodeInfo nodes_info = 1;
int Message_FindDataResponseMessage::nodes_info_size() const {
  return nodes_info_.size();
}
void Message_FindDataResponseMessage::clear_nodes_info() {
  nodes_info_.Clear();
}
const ::MessageBuilderProto::NodeInfo& Message_FindDataResponseMessage::nodes_info(int index) const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.FindDataResponseMessage.nodes_info)
  return nodes_info_.Get(index);
}
::MessageBuilderProto::NodeInfo* Message_FindDataResponseMessage::mutable_nodes_info(int index) {
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.FindDataResponseMessage.nodes_info)
  return nodes_info_.Mutable(index);
}
::MessageBuilderProto::NodeInfo* Message_FindDataResponseMessage::add_nodes_info() {
  // @@protoc_insertion_point(field_add:MessageBuilderProto.Message.FindDataResponseMessage.nodes_info)
  return nodes_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::MessageBuilderProto::NodeInfo >*
Message_FindDataResponseMessage::mutable_nodes_info() {
  // @@protoc_insertion_point(field_mutable_list:MessageBuilderProto.Message.FindDataResponseMessage.nodes_info)
  return &nodes_info_;
}
const ::google::protobuf::RepeatedPtrField< ::MessageBuilderProto::NodeInfo >&
Message_FindDataResponseMessage::nodes_info() const {
  // @@protoc_insertion_point(field_list:MessageBuilderProto.Message.FindDataResponseMessage.nodes_info)
  return nodes_info_;
}

// .MessageBuilderProto.UserInfo user_info = 2;
bool Message_FindDataResponseMessage::has_user_info() const {
  return this != internal_default_instance() && user_info_ != NULL;
}
void Message_FindDataResponseMessage::clear_user_info() {
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) delete user_info_;
  user_info_ = NULL;
}
const ::MessageBuilderProto::UserInfo& Message_FindDataResponseMessage::user_info() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.FindDataResponseMessage.user_info)
  return user_info_ != NULL ? *user_info_
                         : *::MessageBuilderProto::UserInfo::internal_default_instance();
}
::MessageBuilderProto::UserInfo* Message_FindDataResponseMessage::mutable_user_info() {
  
  if (user_info_ == NULL) {
    user_info_ = new ::MessageBuilderProto::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.FindDataResponseMessage.user_info)
  return user_info_;
}
::MessageBuilderProto::UserInfo* Message_FindDataResponseMessage::release_user_info() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.FindDataResponseMessage.user_info)
  
  ::MessageBuilderProto::UserInfo* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
void Message_FindDataResponseMessage::set_allocated_user_info(::MessageBuilderProto::UserInfo* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.FindDataResponseMessage.user_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kMessageTypeFieldNumber;
const int Message::kNodeInfoFieldNumber;
const int Message::kRequestIdFieldNumber;
const int Message::kPingRequestMessageFieldNumber;
const int Message::kStoreRequestMessageFieldNumber;
const int Message::kFindNodeRequestMessageFieldNumber;
const int Message::kFindDataRequestMessageFieldNumber;
const int Message::kPingResponseMessageFieldNumber;
const int Message::kStoreResponseMessageFieldNumber;
const int Message::kFindNodeResponseMessageFieldNumber;
const int Message::kFindDataResponseMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MessageBuilderProto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageBuilderProto.Message)
}
Message::Message(const Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.has_node_info()) {
    node_info_ = new ::MessageBuilderProto::NodeInfo(*from.node_info_);
  } else {
    node_info_ = NULL;
  }
  message_type_ = from.message_type_;
  clear_has_message_uniq();
  switch (from.message_uniq_case()) {
    case kPingRequestMessage: {
      mutable_ping_request_message()->::MessageBuilderProto::Message_PingRequestMessage::MergeFrom(from.ping_request_message());
      break;
    }
    case kStoreRequestMessage: {
      mutable_store_request_message()->::MessageBuilderProto::Message_StoreRequestMessage::MergeFrom(from.store_request_message());
      break;
    }
    case kFindNodeRequestMessage: {
      mutable_find_node_request_message()->::MessageBuilderProto::Message_FindNodeRequestMessage::MergeFrom(from.find_node_request_message());
      break;
    }
    case kFindDataRequestMessage: {
      mutable_find_data_request_message()->::MessageBuilderProto::Message_FindDataRequestMessage::MergeFrom(from.find_data_request_message());
      break;
    }
    case kPingResponseMessage: {
      mutable_ping_response_message()->::MessageBuilderProto::Message_PingResponseMessage::MergeFrom(from.ping_response_message());
      break;
    }
    case kStoreResponseMessage: {
      mutable_store_response_message()->::MessageBuilderProto::Message_StoreResponsetMessage::MergeFrom(from.store_response_message());
      break;
    }
    case kFindNodeResponseMessage: {
      mutable_find_node_response_message()->::MessageBuilderProto::Message_FindNodeResponseMessage::MergeFrom(from.find_node_response_message());
      break;
    }
    case kFindDataResponseMessage: {
      mutable_find_data_response_message()->::MessageBuilderProto::Message_FindDataResponseMessage::MergeFrom(from.find_data_response_message());
      break;
    }
    case MESSAGE_UNIQ_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:MessageBuilderProto.Message)
}

void Message::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&node_info_, 0, reinterpret_cast<char*>(&message_type_) -
    reinterpret_cast<char*>(&node_info_) + sizeof(message_type_));
  clear_has_message_uniq();
  _cached_size_ = 0;
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:MessageBuilderProto.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete node_info_;
  }
  if (has_message_uniq()) {
    clear_message_uniq();
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message& Message::default_instance() {
  protobuf_MessageBuilderProto_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::clear_message_uniq() {
// @@protoc_insertion_point(one_of_clear_start:MessageBuilderProto.Message)
  switch (message_uniq_case()) {
    case kPingRequestMessage: {
      delete message_uniq_.ping_request_message_;
      break;
    }
    case kStoreRequestMessage: {
      delete message_uniq_.store_request_message_;
      break;
    }
    case kFindNodeRequestMessage: {
      delete message_uniq_.find_node_request_message_;
      break;
    }
    case kFindDataRequestMessage: {
      delete message_uniq_.find_data_request_message_;
      break;
    }
    case kPingResponseMessage: {
      delete message_uniq_.ping_response_message_;
      break;
    }
    case kStoreResponseMessage: {
      delete message_uniq_.store_response_message_;
      break;
    }
    case kFindNodeResponseMessage: {
      delete message_uniq_.find_node_response_message_;
      break;
    }
    case kFindDataResponseMessage: {
      delete message_uniq_.find_data_response_message_;
      break;
    }
    case MESSAGE_UNIQ_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_UNIQ_NOT_SET;
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageBuilderProto.Message)
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && node_info_ != NULL) {
    delete node_info_;
  }
  node_info_ = NULL;
  message_type_ = 0;
  clear_message_uniq();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageBuilderProto.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .MessageBuilderProto.MessageType message_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_message_type(static_cast< ::MessageBuilderProto::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MessageBuilderProto.NodeInfo node_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes request_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_request_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MessageBuilderProto.Message.PingRequestMessage ping_request_message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ping_request_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MessageBuilderProto.Message.StoreRequestMessage store_request_message = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store_request_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MessageBuilderProto.Message.FindNodeRequestMessage find_node_request_message = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_find_node_request_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MessageBuilderProto.Message.FindDataRequestMessage find_data_request_message = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_find_data_request_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MessageBuilderProto.Message.PingResponseMessage ping_response_message = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ping_response_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MessageBuilderProto.Message.StoreResponsetMessage store_response_message = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store_response_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MessageBuilderProto.Message.FindNodeResponseMessage find_node_response_message = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_find_node_response_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MessageBuilderProto.Message.FindDataResponseMessage find_data_response_message = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_find_data_response_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageBuilderProto.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageBuilderProto.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageBuilderProto.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MessageBuilderProto.MessageType message_type = 1;
  if (this->message_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->message_type(), output);
  }

  // .MessageBuilderProto.NodeInfo node_info = 2;
  if (this->has_node_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->node_info_, output);
  }

  // bytes request_id = 3;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->request_id(), output);
  }

  // .MessageBuilderProto.Message.PingRequestMessage ping_request_message = 4;
  if (has_ping_request_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *message_uniq_.ping_request_message_, output);
  }

  // .MessageBuilderProto.Message.StoreRequestMessage store_request_message = 5;
  if (has_store_request_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *message_uniq_.store_request_message_, output);
  }

  // .MessageBuilderProto.Message.FindNodeRequestMessage find_node_request_message = 6;
  if (has_find_node_request_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *message_uniq_.find_node_request_message_, output);
  }

  // .MessageBuilderProto.Message.FindDataRequestMessage find_data_request_message = 7;
  if (has_find_data_request_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *message_uniq_.find_data_request_message_, output);
  }

  // .MessageBuilderProto.Message.PingResponseMessage ping_response_message = 8;
  if (has_ping_response_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *message_uniq_.ping_response_message_, output);
  }

  // .MessageBuilderProto.Message.StoreResponsetMessage store_response_message = 9;
  if (has_store_response_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *message_uniq_.store_response_message_, output);
  }

  // .MessageBuilderProto.Message.FindNodeResponseMessage find_node_response_message = 10;
  if (has_find_node_response_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *message_uniq_.find_node_response_message_, output);
  }

  // .MessageBuilderProto.Message.FindDataResponseMessage find_data_response_message = 11;
  if (has_find_data_response_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *message_uniq_.find_data_response_message_, output);
  }

  // @@protoc_insertion_point(serialize_end:MessageBuilderProto.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageBuilderProto.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MessageBuilderProto.MessageType message_type = 1;
  if (this->message_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->message_type(), target);
  }

  // .MessageBuilderProto.NodeInfo node_info = 2;
  if (this->has_node_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->node_info_, deterministic, target);
  }

  // bytes request_id = 3;
  if (this->request_id().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->request_id(), target);
  }

  // .MessageBuilderProto.Message.PingRequestMessage ping_request_message = 4;
  if (has_ping_request_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *message_uniq_.ping_request_message_, deterministic, target);
  }

  // .MessageBuilderProto.Message.StoreRequestMessage store_request_message = 5;
  if (has_store_request_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *message_uniq_.store_request_message_, deterministic, target);
  }

  // .MessageBuilderProto.Message.FindNodeRequestMessage find_node_request_message = 6;
  if (has_find_node_request_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *message_uniq_.find_node_request_message_, deterministic, target);
  }

  // .MessageBuilderProto.Message.FindDataRequestMessage find_data_request_message = 7;
  if (has_find_data_request_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *message_uniq_.find_data_request_message_, deterministic, target);
  }

  // .MessageBuilderProto.Message.PingResponseMessage ping_response_message = 8;
  if (has_ping_response_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *message_uniq_.ping_response_message_, deterministic, target);
  }

  // .MessageBuilderProto.Message.StoreResponsetMessage store_response_message = 9;
  if (has_store_response_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *message_uniq_.store_response_message_, deterministic, target);
  }

  // .MessageBuilderProto.Message.FindNodeResponseMessage find_node_response_message = 10;
  if (has_find_node_response_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *message_uniq_.find_node_response_message_, deterministic, target);
  }

  // .MessageBuilderProto.Message.FindDataResponseMessage find_data_response_message = 11;
  if (has_find_data_response_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *message_uniq_.find_data_response_message_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MessageBuilderProto.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageBuilderProto.Message)
  size_t total_size = 0;

  // bytes request_id = 3;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->request_id());
  }

  // .MessageBuilderProto.NodeInfo node_info = 2;
  if (this->has_node_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->node_info_);
  }

  // .MessageBuilderProto.MessageType message_type = 1;
  if (this->message_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->message_type());
  }

  switch (message_uniq_case()) {
    // .MessageBuilderProto.Message.PingRequestMessage ping_request_message = 4;
    case kPingRequestMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_uniq_.ping_request_message_);
      break;
    }
    // .MessageBuilderProto.Message.StoreRequestMessage store_request_message = 5;
    case kStoreRequestMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_uniq_.store_request_message_);
      break;
    }
    // .MessageBuilderProto.Message.FindNodeRequestMessage find_node_request_message = 6;
    case kFindNodeRequestMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_uniq_.find_node_request_message_);
      break;
    }
    // .MessageBuilderProto.Message.FindDataRequestMessage find_data_request_message = 7;
    case kFindDataRequestMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_uniq_.find_data_request_message_);
      break;
    }
    // .MessageBuilderProto.Message.PingResponseMessage ping_response_message = 8;
    case kPingResponseMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_uniq_.ping_response_message_);
      break;
    }
    // .MessageBuilderProto.Message.StoreResponsetMessage store_response_message = 9;
    case kStoreResponseMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_uniq_.store_response_message_);
      break;
    }
    // .MessageBuilderProto.Message.FindNodeResponseMessage find_node_response_message = 10;
    case kFindNodeResponseMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_uniq_.find_node_response_message_);
      break;
    }
    // .MessageBuilderProto.Message.FindDataResponseMessage find_data_response_message = 11;
    case kFindDataResponseMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_uniq_.find_data_response_message_);
      break;
    }
    case MESSAGE_UNIQ_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageBuilderProto.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageBuilderProto.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageBuilderProto.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageBuilderProto.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.has_node_info()) {
    mutable_node_info()->::MessageBuilderProto::NodeInfo::MergeFrom(from.node_info());
  }
  if (from.message_type() != 0) {
    set_message_type(from.message_type());
  }
  switch (from.message_uniq_case()) {
    case kPingRequestMessage: {
      mutable_ping_request_message()->::MessageBuilderProto::Message_PingRequestMessage::MergeFrom(from.ping_request_message());
      break;
    }
    case kStoreRequestMessage: {
      mutable_store_request_message()->::MessageBuilderProto::Message_StoreRequestMessage::MergeFrom(from.store_request_message());
      break;
    }
    case kFindNodeRequestMessage: {
      mutable_find_node_request_message()->::MessageBuilderProto::Message_FindNodeRequestMessage::MergeFrom(from.find_node_request_message());
      break;
    }
    case kFindDataRequestMessage: {
      mutable_find_data_request_message()->::MessageBuilderProto::Message_FindDataRequestMessage::MergeFrom(from.find_data_request_message());
      break;
    }
    case kPingResponseMessage: {
      mutable_ping_response_message()->::MessageBuilderProto::Message_PingResponseMessage::MergeFrom(from.ping_response_message());
      break;
    }
    case kStoreResponseMessage: {
      mutable_store_response_message()->::MessageBuilderProto::Message_StoreResponsetMessage::MergeFrom(from.store_response_message());
      break;
    }
    case kFindNodeResponseMessage: {
      mutable_find_node_response_message()->::MessageBuilderProto::Message_FindNodeResponseMessage::MergeFrom(from.find_node_response_message());
      break;
    }
    case kFindDataResponseMessage: {
      mutable_find_data_response_message()->::MessageBuilderProto::Message_FindDataResponseMessage::MergeFrom(from.find_data_response_message());
      break;
    }
    case MESSAGE_UNIQ_NOT_SET: {
      break;
    }
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageBuilderProto.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageBuilderProto.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  request_id_.Swap(&other->request_id_);
  std::swap(node_info_, other->node_info_);
  std::swap(message_type_, other->message_type_);
  std::swap(message_uniq_, other->message_uniq_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_MessageBuilderProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageBuilderProto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// .MessageBuilderProto.MessageType message_type = 1;
void Message::clear_message_type() {
  message_type_ = 0;
}
::MessageBuilderProto::MessageType Message::message_type() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.message_type)
  return static_cast< ::MessageBuilderProto::MessageType >(message_type_);
}
void Message::set_message_type(::MessageBuilderProto::MessageType value) {
  
  message_type_ = value;
  // @@protoc_insertion_point(field_set:MessageBuilderProto.Message.message_type)
}

// .MessageBuilderProto.NodeInfo node_info = 2;
bool Message::has_node_info() const {
  return this != internal_default_instance() && node_info_ != NULL;
}
void Message::clear_node_info() {
  if (GetArenaNoVirtual() == NULL && node_info_ != NULL) delete node_info_;
  node_info_ = NULL;
}
const ::MessageBuilderProto::NodeInfo& Message::node_info() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.node_info)
  return node_info_ != NULL ? *node_info_
                         : *::MessageBuilderProto::NodeInfo::internal_default_instance();
}
::MessageBuilderProto::NodeInfo* Message::mutable_node_info() {
  
  if (node_info_ == NULL) {
    node_info_ = new ::MessageBuilderProto::NodeInfo;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.node_info)
  return node_info_;
}
::MessageBuilderProto::NodeInfo* Message::release_node_info() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.node_info)
  
  ::MessageBuilderProto::NodeInfo* temp = node_info_;
  node_info_ = NULL;
  return temp;
}
void Message::set_allocated_node_info(::MessageBuilderProto::NodeInfo* node_info) {
  delete node_info_;
  node_info_ = node_info;
  if (node_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.node_info)
}

// bytes request_id = 3;
void Message::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Message::request_id() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.request_id)
  return request_id_.GetNoArena();
}
void Message::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageBuilderProto.Message.request_id)
}
#if LANG_CXX11
void Message::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageBuilderProto.Message.request_id)
}
#endif
void Message::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageBuilderProto.Message.request_id)
}
void Message::set_request_id(const void* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageBuilderProto.Message.request_id)
}
::std::string* Message::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Message::release_request_id() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.request_id)
}

// .MessageBuilderProto.Message.PingRequestMessage ping_request_message = 4;
bool Message::has_ping_request_message() const {
  return message_uniq_case() == kPingRequestMessage;
}
void Message::set_has_ping_request_message() {
  _oneof_case_[0] = kPingRequestMessage;
}
void Message::clear_ping_request_message() {
  if (has_ping_request_message()) {
    delete message_uniq_.ping_request_message_;
    clear_has_message_uniq();
  }
}
 const ::MessageBuilderProto::Message_PingRequestMessage& Message::ping_request_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.ping_request_message)
  return has_ping_request_message()
      ? *message_uniq_.ping_request_message_
      : ::MessageBuilderProto::Message_PingRequestMessage::default_instance();
}
::MessageBuilderProto::Message_PingRequestMessage* Message::mutable_ping_request_message() {
  if (!has_ping_request_message()) {
    clear_message_uniq();
    set_has_ping_request_message();
    message_uniq_.ping_request_message_ = new ::MessageBuilderProto::Message_PingRequestMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.ping_request_message)
  return message_uniq_.ping_request_message_;
}
::MessageBuilderProto::Message_PingRequestMessage* Message::release_ping_request_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.ping_request_message)
  if (has_ping_request_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_PingRequestMessage* temp = message_uniq_.ping_request_message_;
    message_uniq_.ping_request_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_ping_request_message(::MessageBuilderProto::Message_PingRequestMessage* ping_request_message) {
  clear_message_uniq();
  if (ping_request_message) {
    set_has_ping_request_message();
    message_uniq_.ping_request_message_ = ping_request_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.ping_request_message)
}

// .MessageBuilderProto.Message.StoreRequestMessage store_request_message = 5;
bool Message::has_store_request_message() const {
  return message_uniq_case() == kStoreRequestMessage;
}
void Message::set_has_store_request_message() {
  _oneof_case_[0] = kStoreRequestMessage;
}
void Message::clear_store_request_message() {
  if (has_store_request_message()) {
    delete message_uniq_.store_request_message_;
    clear_has_message_uniq();
  }
}
 const ::MessageBuilderProto::Message_StoreRequestMessage& Message::store_request_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.store_request_message)
  return has_store_request_message()
      ? *message_uniq_.store_request_message_
      : ::MessageBuilderProto::Message_StoreRequestMessage::default_instance();
}
::MessageBuilderProto::Message_StoreRequestMessage* Message::mutable_store_request_message() {
  if (!has_store_request_message()) {
    clear_message_uniq();
    set_has_store_request_message();
    message_uniq_.store_request_message_ = new ::MessageBuilderProto::Message_StoreRequestMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.store_request_message)
  return message_uniq_.store_request_message_;
}
::MessageBuilderProto::Message_StoreRequestMessage* Message::release_store_request_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.store_request_message)
  if (has_store_request_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_StoreRequestMessage* temp = message_uniq_.store_request_message_;
    message_uniq_.store_request_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_store_request_message(::MessageBuilderProto::Message_StoreRequestMessage* store_request_message) {
  clear_message_uniq();
  if (store_request_message) {
    set_has_store_request_message();
    message_uniq_.store_request_message_ = store_request_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.store_request_message)
}

// .MessageBuilderProto.Message.FindNodeRequestMessage find_node_request_message = 6;
bool Message::has_find_node_request_message() const {
  return message_uniq_case() == kFindNodeRequestMessage;
}
void Message::set_has_find_node_request_message() {
  _oneof_case_[0] = kFindNodeRequestMessage;
}
void Message::clear_find_node_request_message() {
  if (has_find_node_request_message()) {
    delete message_uniq_.find_node_request_message_;
    clear_has_message_uniq();
  }
}
 const ::MessageBuilderProto::Message_FindNodeRequestMessage& Message::find_node_request_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.find_node_request_message)
  return has_find_node_request_message()
      ? *message_uniq_.find_node_request_message_
      : ::MessageBuilderProto::Message_FindNodeRequestMessage::default_instance();
}
::MessageBuilderProto::Message_FindNodeRequestMessage* Message::mutable_find_node_request_message() {
  if (!has_find_node_request_message()) {
    clear_message_uniq();
    set_has_find_node_request_message();
    message_uniq_.find_node_request_message_ = new ::MessageBuilderProto::Message_FindNodeRequestMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.find_node_request_message)
  return message_uniq_.find_node_request_message_;
}
::MessageBuilderProto::Message_FindNodeRequestMessage* Message::release_find_node_request_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.find_node_request_message)
  if (has_find_node_request_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_FindNodeRequestMessage* temp = message_uniq_.find_node_request_message_;
    message_uniq_.find_node_request_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_find_node_request_message(::MessageBuilderProto::Message_FindNodeRequestMessage* find_node_request_message) {
  clear_message_uniq();
  if (find_node_request_message) {
    set_has_find_node_request_message();
    message_uniq_.find_node_request_message_ = find_node_request_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.find_node_request_message)
}

// .MessageBuilderProto.Message.FindDataRequestMessage find_data_request_message = 7;
bool Message::has_find_data_request_message() const {
  return message_uniq_case() == kFindDataRequestMessage;
}
void Message::set_has_find_data_request_message() {
  _oneof_case_[0] = kFindDataRequestMessage;
}
void Message::clear_find_data_request_message() {
  if (has_find_data_request_message()) {
    delete message_uniq_.find_data_request_message_;
    clear_has_message_uniq();
  }
}
 const ::MessageBuilderProto::Message_FindDataRequestMessage& Message::find_data_request_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.find_data_request_message)
  return has_find_data_request_message()
      ? *message_uniq_.find_data_request_message_
      : ::MessageBuilderProto::Message_FindDataRequestMessage::default_instance();
}
::MessageBuilderProto::Message_FindDataRequestMessage* Message::mutable_find_data_request_message() {
  if (!has_find_data_request_message()) {
    clear_message_uniq();
    set_has_find_data_request_message();
    message_uniq_.find_data_request_message_ = new ::MessageBuilderProto::Message_FindDataRequestMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.find_data_request_message)
  return message_uniq_.find_data_request_message_;
}
::MessageBuilderProto::Message_FindDataRequestMessage* Message::release_find_data_request_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.find_data_request_message)
  if (has_find_data_request_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_FindDataRequestMessage* temp = message_uniq_.find_data_request_message_;
    message_uniq_.find_data_request_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_find_data_request_message(::MessageBuilderProto::Message_FindDataRequestMessage* find_data_request_message) {
  clear_message_uniq();
  if (find_data_request_message) {
    set_has_find_data_request_message();
    message_uniq_.find_data_request_message_ = find_data_request_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.find_data_request_message)
}

// .MessageBuilderProto.Message.PingResponseMessage ping_response_message = 8;
bool Message::has_ping_response_message() const {
  return message_uniq_case() == kPingResponseMessage;
}
void Message::set_has_ping_response_message() {
  _oneof_case_[0] = kPingResponseMessage;
}
void Message::clear_ping_response_message() {
  if (has_ping_response_message()) {
    delete message_uniq_.ping_response_message_;
    clear_has_message_uniq();
  }
}
 const ::MessageBuilderProto::Message_PingResponseMessage& Message::ping_response_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.ping_response_message)
  return has_ping_response_message()
      ? *message_uniq_.ping_response_message_
      : ::MessageBuilderProto::Message_PingResponseMessage::default_instance();
}
::MessageBuilderProto::Message_PingResponseMessage* Message::mutable_ping_response_message() {
  if (!has_ping_response_message()) {
    clear_message_uniq();
    set_has_ping_response_message();
    message_uniq_.ping_response_message_ = new ::MessageBuilderProto::Message_PingResponseMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.ping_response_message)
  return message_uniq_.ping_response_message_;
}
::MessageBuilderProto::Message_PingResponseMessage* Message::release_ping_response_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.ping_response_message)
  if (has_ping_response_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_PingResponseMessage* temp = message_uniq_.ping_response_message_;
    message_uniq_.ping_response_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_ping_response_message(::MessageBuilderProto::Message_PingResponseMessage* ping_response_message) {
  clear_message_uniq();
  if (ping_response_message) {
    set_has_ping_response_message();
    message_uniq_.ping_response_message_ = ping_response_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.ping_response_message)
}

// .MessageBuilderProto.Message.StoreResponsetMessage store_response_message = 9;
bool Message::has_store_response_message() const {
  return message_uniq_case() == kStoreResponseMessage;
}
void Message::set_has_store_response_message() {
  _oneof_case_[0] = kStoreResponseMessage;
}
void Message::clear_store_response_message() {
  if (has_store_response_message()) {
    delete message_uniq_.store_response_message_;
    clear_has_message_uniq();
  }
}
 const ::MessageBuilderProto::Message_StoreResponsetMessage& Message::store_response_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.store_response_message)
  return has_store_response_message()
      ? *message_uniq_.store_response_message_
      : ::MessageBuilderProto::Message_StoreResponsetMessage::default_instance();
}
::MessageBuilderProto::Message_StoreResponsetMessage* Message::mutable_store_response_message() {
  if (!has_store_response_message()) {
    clear_message_uniq();
    set_has_store_response_message();
    message_uniq_.store_response_message_ = new ::MessageBuilderProto::Message_StoreResponsetMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.store_response_message)
  return message_uniq_.store_response_message_;
}
::MessageBuilderProto::Message_StoreResponsetMessage* Message::release_store_response_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.store_response_message)
  if (has_store_response_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_StoreResponsetMessage* temp = message_uniq_.store_response_message_;
    message_uniq_.store_response_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_store_response_message(::MessageBuilderProto::Message_StoreResponsetMessage* store_response_message) {
  clear_message_uniq();
  if (store_response_message) {
    set_has_store_response_message();
    message_uniq_.store_response_message_ = store_response_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.store_response_message)
}

// .MessageBuilderProto.Message.FindNodeResponseMessage find_node_response_message = 10;
bool Message::has_find_node_response_message() const {
  return message_uniq_case() == kFindNodeResponseMessage;
}
void Message::set_has_find_node_response_message() {
  _oneof_case_[0] = kFindNodeResponseMessage;
}
void Message::clear_find_node_response_message() {
  if (has_find_node_response_message()) {
    delete message_uniq_.find_node_response_message_;
    clear_has_message_uniq();
  }
}
 const ::MessageBuilderProto::Message_FindNodeResponseMessage& Message::find_node_response_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.find_node_response_message)
  return has_find_node_response_message()
      ? *message_uniq_.find_node_response_message_
      : ::MessageBuilderProto::Message_FindNodeResponseMessage::default_instance();
}
::MessageBuilderProto::Message_FindNodeResponseMessage* Message::mutable_find_node_response_message() {
  if (!has_find_node_response_message()) {
    clear_message_uniq();
    set_has_find_node_response_message();
    message_uniq_.find_node_response_message_ = new ::MessageBuilderProto::Message_FindNodeResponseMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.find_node_response_message)
  return message_uniq_.find_node_response_message_;
}
::MessageBuilderProto::Message_FindNodeResponseMessage* Message::release_find_node_response_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.find_node_response_message)
  if (has_find_node_response_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_FindNodeResponseMessage* temp = message_uniq_.find_node_response_message_;
    message_uniq_.find_node_response_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_find_node_response_message(::MessageBuilderProto::Message_FindNodeResponseMessage* find_node_response_message) {
  clear_message_uniq();
  if (find_node_response_message) {
    set_has_find_node_response_message();
    message_uniq_.find_node_response_message_ = find_node_response_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.find_node_response_message)
}

// .MessageBuilderProto.Message.FindDataResponseMessage find_data_response_message = 11;
bool Message::has_find_data_response_message() const {
  return message_uniq_case() == kFindDataResponseMessage;
}
void Message::set_has_find_data_response_message() {
  _oneof_case_[0] = kFindDataResponseMessage;
}
void Message::clear_find_data_response_message() {
  if (has_find_data_response_message()) {
    delete message_uniq_.find_data_response_message_;
    clear_has_message_uniq();
  }
}
 const ::MessageBuilderProto::Message_FindDataResponseMessage& Message::find_data_response_message() const {
  // @@protoc_insertion_point(field_get:MessageBuilderProto.Message.find_data_response_message)
  return has_find_data_response_message()
      ? *message_uniq_.find_data_response_message_
      : ::MessageBuilderProto::Message_FindDataResponseMessage::default_instance();
}
::MessageBuilderProto::Message_FindDataResponseMessage* Message::mutable_find_data_response_message() {
  if (!has_find_data_response_message()) {
    clear_message_uniq();
    set_has_find_data_response_message();
    message_uniq_.find_data_response_message_ = new ::MessageBuilderProto::Message_FindDataResponseMessage;
  }
  // @@protoc_insertion_point(field_mutable:MessageBuilderProto.Message.find_data_response_message)
  return message_uniq_.find_data_response_message_;
}
::MessageBuilderProto::Message_FindDataResponseMessage* Message::release_find_data_response_message() {
  // @@protoc_insertion_point(field_release:MessageBuilderProto.Message.find_data_response_message)
  if (has_find_data_response_message()) {
    clear_has_message_uniq();
    ::MessageBuilderProto::Message_FindDataResponseMessage* temp = message_uniq_.find_data_response_message_;
    message_uniq_.find_data_response_message_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_find_data_response_message(::MessageBuilderProto::Message_FindDataResponseMessage* find_data_response_message) {
  clear_message_uniq();
  if (find_data_response_message) {
    set_has_find_data_response_message();
    message_uniq_.find_data_response_message_ = find_data_response_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageBuilderProto.Message.find_data_response_message)
}

bool Message::has_message_uniq() const {
  return message_uniq_case() != MESSAGE_UNIQ_NOT_SET;
}
void Message::clear_has_message_uniq() {
  _oneof_case_[0] = MESSAGE_UNIQ_NOT_SET;
}
Message::MessageUniqCase Message::message_uniq_case() const {
  return Message::MessageUniqCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MessageBuilderProto

// @@protoc_insertion_point(global_scope)
